-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dense_latency_0_0_0_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    data_0_V_read : IN STD_LOGIC_VECTOR (16 downto 0);
    data_1_V_read : IN STD_LOGIC_VECTOR (16 downto 0);
    data_2_V_read : IN STD_LOGIC_VECTOR (16 downto 0);
    data_3_V_read : IN STD_LOGIC_VECTOR (16 downto 0);
    data_4_V_read : IN STD_LOGIC_VECTOR (16 downto 0);
    data_5_V_read : IN STD_LOGIC_VECTOR (16 downto 0);
    data_6_V_read : IN STD_LOGIC_VECTOR (16 downto 0);
    data_7_V_read : IN STD_LOGIC_VECTOR (16 downto 0);
    data_8_V_read : IN STD_LOGIC_VECTOR (16 downto 0);
    data_9_V_read : IN STD_LOGIC_VECTOR (16 downto 0);
    data_10_V_read : IN STD_LOGIC_VECTOR (16 downto 0);
    data_11_V_read : IN STD_LOGIC_VECTOR (16 downto 0);
    data_12_V_read : IN STD_LOGIC_VECTOR (16 downto 0);
    data_13_V_read : IN STD_LOGIC_VECTOR (16 downto 0);
    data_14_V_read : IN STD_LOGIC_VECTOR (16 downto 0);
    data_15_V_read : IN STD_LOGIC_VECTOR (16 downto 0);
    data_16_V_read : IN STD_LOGIC_VECTOR (16 downto 0);
    data_17_V_read : IN STD_LOGIC_VECTOR (16 downto 0);
    data_18_V_read : IN STD_LOGIC_VECTOR (16 downto 0);
    data_19_V_read : IN STD_LOGIC_VECTOR (16 downto 0);
    data_20_V_read : IN STD_LOGIC_VECTOR (16 downto 0);
    data_21_V_read : IN STD_LOGIC_VECTOR (16 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (16 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (16 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (16 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (16 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (16 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (16 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (16 downto 0);
    ap_return_7 : OUT STD_LOGIC_VECTOR (16 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of dense_latency_0_0_0_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv17_1FFF0 : STD_LOGIC_VECTOR (16 downto 0) := "11111111111110000";
    constant ap_const_lv17_130 : STD_LOGIC_VECTOR (16 downto 0) := "00000000100110000";

    signal mult_0_V_product_1_fu_206_ap_return : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_0_V_reg_742 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal mult_6_V_product_1_fu_214_ap_return : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_6_V_reg_748 : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_8_V_product_1_fu_222_ap_return : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_8_V_reg_753 : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_16_V_product_1_fu_230_ap_return : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_16_V_reg_760 : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_24_V_product_1_fu_238_ap_return : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_24_V_reg_766 : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_32_V_product_1_fu_246_ap_return : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_32_V_reg_772 : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_40_V_product_1_fu_254_ap_return : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_40_V_reg_778 : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_48_V_product_1_fu_262_ap_return : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_48_V_reg_784 : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_56_V_product_1_fu_270_ap_return : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_56_V_reg_791 : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_64_V_product_1_fu_278_ap_return : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_64_V_reg_797 : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_72_V_product_1_fu_286_ap_return : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_72_V_reg_804 : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_80_V_product_1_fu_294_ap_return : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_80_V_reg_811 : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_88_V_product_1_fu_302_ap_return : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_88_V_reg_818 : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_96_V_product_1_fu_310_ap_return : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_96_V_reg_825 : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_104_V_product_1_fu_318_ap_return : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_104_V_reg_832 : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_112_V_product_1_fu_326_ap_return : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_112_V_reg_839 : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_120_V_product_1_fu_334_ap_return : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_120_V_reg_846 : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_128_V_product_1_fu_342_ap_return : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_128_V_reg_853 : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_136_V_product_1_fu_350_ap_return : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_136_V_reg_860 : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_144_V_product_1_fu_358_ap_return : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_144_V_reg_867 : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_152_V_product_1_fu_366_ap_return : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_152_V_reg_874 : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_160_V_product_1_fu_374_ap_return : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_160_V_reg_880 : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_166_V_product_1_fu_382_ap_return : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_166_V_reg_885 : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_168_V_product_1_fu_390_ap_return : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_168_V_reg_890 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp4_fu_411_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp4_reg_897 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp9_fu_435_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp9_reg_902 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp20_fu_484_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp20_reg_907 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp23_fu_499_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp23_reg_912 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp28_fu_523_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp28_reg_917 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp31_fu_533_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp31_reg_922 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp32_fu_538_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp32_reg_927 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp38_fu_562_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp38_reg_932 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp41_fu_572_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp41_reg_937 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp46_fu_596_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp46_reg_942 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp58_fu_651_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp58_reg_947 : STD_LOGIC_VECTOR (16 downto 0);
    signal mult_0_V_product_1_fu_206_ap_ready : STD_LOGIC;
    signal mult_6_V_product_1_fu_214_ap_ready : STD_LOGIC;
    signal mult_8_V_product_1_fu_222_ap_ready : STD_LOGIC;
    signal mult_16_V_product_1_fu_230_ap_ready : STD_LOGIC;
    signal mult_24_V_product_1_fu_238_ap_ready : STD_LOGIC;
    signal mult_32_V_product_1_fu_246_ap_ready : STD_LOGIC;
    signal mult_40_V_product_1_fu_254_ap_ready : STD_LOGIC;
    signal mult_48_V_product_1_fu_262_ap_ready : STD_LOGIC;
    signal mult_56_V_product_1_fu_270_ap_ready : STD_LOGIC;
    signal mult_64_V_product_1_fu_278_ap_ready : STD_LOGIC;
    signal mult_72_V_product_1_fu_286_ap_ready : STD_LOGIC;
    signal mult_80_V_product_1_fu_294_ap_ready : STD_LOGIC;
    signal mult_88_V_product_1_fu_302_ap_ready : STD_LOGIC;
    signal mult_96_V_product_1_fu_310_ap_ready : STD_LOGIC;
    signal mult_104_V_product_1_fu_318_ap_ready : STD_LOGIC;
    signal mult_112_V_product_1_fu_326_ap_ready : STD_LOGIC;
    signal mult_120_V_product_1_fu_334_ap_ready : STD_LOGIC;
    signal mult_128_V_product_1_fu_342_ap_ready : STD_LOGIC;
    signal mult_136_V_product_1_fu_350_ap_ready : STD_LOGIC;
    signal mult_144_V_product_1_fu_358_ap_ready : STD_LOGIC;
    signal mult_152_V_product_1_fu_366_ap_ready : STD_LOGIC;
    signal mult_160_V_product_1_fu_374_ap_ready : STD_LOGIC;
    signal mult_166_V_product_1_fu_382_ap_ready : STD_LOGIC;
    signal mult_168_V_product_1_fu_390_ap_ready : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp2_fu_402_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp3_fu_406_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp1_fu_398_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp5_fu_417_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp7_fu_426_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp8_fu_430_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp6_fu_421_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp12_fu_445_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp13_fu_449_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp11_fu_441_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp15_fu_460_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp17_fu_469_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp18_fu_473_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp16_fu_464_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp19_fu_478_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp14_fu_454_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp21_fu_490_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp22_fu_494_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp24_fu_505_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp26_fu_514_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp27_fu_518_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp25_fu_509_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp30_fu_529_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp34_fu_543_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp36_fu_552_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp37_fu_557_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp35_fu_547_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp40_fu_568_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp42_fu_578_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp44_fu_587_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp45_fu_591_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp43_fu_582_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp48_fu_602_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp50_fu_611_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp51_fu_615_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp49_fu_606_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp53_fu_626_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp55_fu_635_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp56_fu_640_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp54_fu_630_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp57_fu_645_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp52_fu_620_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp10_fu_657_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp33_fu_670_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp39_fu_674_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp29_fu_666_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp47_fu_685_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal acc_2_V_fu_661_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal acc_1_V_fu_679_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal acc_6_V_fu_689_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_ce_reg : STD_LOGIC;
    signal data_0_V_read_int_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal data_1_V_read_int_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal data_2_V_read_int_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal data_3_V_read_int_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal data_4_V_read_int_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal data_5_V_read_int_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal data_6_V_read_int_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal data_7_V_read_int_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal data_8_V_read_int_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal data_9_V_read_int_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal data_10_V_read_int_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal data_11_V_read_int_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal data_12_V_read_int_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal data_13_V_read_int_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal data_14_V_read_int_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal data_15_V_read_int_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal data_16_V_read_int_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal data_17_V_read_int_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal data_18_V_read_int_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal data_19_V_read_int_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal data_20_V_read_int_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal data_21_V_read_int_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_return_0_int_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_return_1_int_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_return_2_int_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_return_3_int_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_return_4_int_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_return_5_int_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_return_6_int_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_return_7_int_reg : STD_LOGIC_VECTOR (16 downto 0);

    component product_1 IS
    port (
        ap_ready : OUT STD_LOGIC;
        a_V : IN STD_LOGIC_VECTOR (16 downto 0);
        w_V : IN STD_LOGIC_VECTOR (3 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;



begin
    mult_0_V_product_1_fu_206 : component product_1
    port map (
        ap_ready => mult_0_V_product_1_fu_206_ap_ready,
        a_V => data_0_V_read_int_reg,
        w_V => ap_const_lv4_0,
        ap_return => mult_0_V_product_1_fu_206_ap_return);

    mult_6_V_product_1_fu_214 : component product_1
    port map (
        ap_ready => mult_6_V_product_1_fu_214_ap_ready,
        a_V => data_0_V_read_int_reg,
        w_V => ap_const_lv4_3,
        ap_return => mult_6_V_product_1_fu_214_ap_return);

    mult_8_V_product_1_fu_222 : component product_1
    port map (
        ap_ready => mult_8_V_product_1_fu_222_ap_ready,
        a_V => data_1_V_read_int_reg,
        w_V => ap_const_lv4_0,
        ap_return => mult_8_V_product_1_fu_222_ap_return);

    mult_16_V_product_1_fu_230 : component product_1
    port map (
        ap_ready => mult_16_V_product_1_fu_230_ap_ready,
        a_V => data_2_V_read_int_reg,
        w_V => ap_const_lv4_0,
        ap_return => mult_16_V_product_1_fu_230_ap_return);

    mult_24_V_product_1_fu_238 : component product_1
    port map (
        ap_ready => mult_24_V_product_1_fu_238_ap_ready,
        a_V => data_3_V_read_int_reg,
        w_V => ap_const_lv4_0,
        ap_return => mult_24_V_product_1_fu_238_ap_return);

    mult_32_V_product_1_fu_246 : component product_1
    port map (
        ap_ready => mult_32_V_product_1_fu_246_ap_ready,
        a_V => data_4_V_read_int_reg,
        w_V => ap_const_lv4_0,
        ap_return => mult_32_V_product_1_fu_246_ap_return);

    mult_40_V_product_1_fu_254 : component product_1
    port map (
        ap_ready => mult_40_V_product_1_fu_254_ap_ready,
        a_V => data_5_V_read_int_reg,
        w_V => ap_const_lv4_0,
        ap_return => mult_40_V_product_1_fu_254_ap_return);

    mult_48_V_product_1_fu_262 : component product_1
    port map (
        ap_ready => mult_48_V_product_1_fu_262_ap_ready,
        a_V => data_6_V_read_int_reg,
        w_V => ap_const_lv4_0,
        ap_return => mult_48_V_product_1_fu_262_ap_return);

    mult_56_V_product_1_fu_270 : component product_1
    port map (
        ap_ready => mult_56_V_product_1_fu_270_ap_ready,
        a_V => data_7_V_read_int_reg,
        w_V => ap_const_lv4_0,
        ap_return => mult_56_V_product_1_fu_270_ap_return);

    mult_64_V_product_1_fu_278 : component product_1
    port map (
        ap_ready => mult_64_V_product_1_fu_278_ap_ready,
        a_V => data_8_V_read_int_reg,
        w_V => ap_const_lv4_0,
        ap_return => mult_64_V_product_1_fu_278_ap_return);

    mult_72_V_product_1_fu_286 : component product_1
    port map (
        ap_ready => mult_72_V_product_1_fu_286_ap_ready,
        a_V => data_9_V_read_int_reg,
        w_V => ap_const_lv4_0,
        ap_return => mult_72_V_product_1_fu_286_ap_return);

    mult_80_V_product_1_fu_294 : component product_1
    port map (
        ap_ready => mult_80_V_product_1_fu_294_ap_ready,
        a_V => data_10_V_read_int_reg,
        w_V => ap_const_lv4_0,
        ap_return => mult_80_V_product_1_fu_294_ap_return);

    mult_88_V_product_1_fu_302 : component product_1
    port map (
        ap_ready => mult_88_V_product_1_fu_302_ap_ready,
        a_V => data_11_V_read_int_reg,
        w_V => ap_const_lv4_0,
        ap_return => mult_88_V_product_1_fu_302_ap_return);

    mult_96_V_product_1_fu_310 : component product_1
    port map (
        ap_ready => mult_96_V_product_1_fu_310_ap_ready,
        a_V => data_12_V_read_int_reg,
        w_V => ap_const_lv4_0,
        ap_return => mult_96_V_product_1_fu_310_ap_return);

    mult_104_V_product_1_fu_318 : component product_1
    port map (
        ap_ready => mult_104_V_product_1_fu_318_ap_ready,
        a_V => data_13_V_read_int_reg,
        w_V => ap_const_lv4_0,
        ap_return => mult_104_V_product_1_fu_318_ap_return);

    mult_112_V_product_1_fu_326 : component product_1
    port map (
        ap_ready => mult_112_V_product_1_fu_326_ap_ready,
        a_V => data_14_V_read_int_reg,
        w_V => ap_const_lv4_0,
        ap_return => mult_112_V_product_1_fu_326_ap_return);

    mult_120_V_product_1_fu_334 : component product_1
    port map (
        ap_ready => mult_120_V_product_1_fu_334_ap_ready,
        a_V => data_15_V_read_int_reg,
        w_V => ap_const_lv4_0,
        ap_return => mult_120_V_product_1_fu_334_ap_return);

    mult_128_V_product_1_fu_342 : component product_1
    port map (
        ap_ready => mult_128_V_product_1_fu_342_ap_ready,
        a_V => data_16_V_read_int_reg,
        w_V => ap_const_lv4_0,
        ap_return => mult_128_V_product_1_fu_342_ap_return);

    mult_136_V_product_1_fu_350 : component product_1
    port map (
        ap_ready => mult_136_V_product_1_fu_350_ap_ready,
        a_V => data_17_V_read_int_reg,
        w_V => ap_const_lv4_0,
        ap_return => mult_136_V_product_1_fu_350_ap_return);

    mult_144_V_product_1_fu_358 : component product_1
    port map (
        ap_ready => mult_144_V_product_1_fu_358_ap_ready,
        a_V => data_18_V_read_int_reg,
        w_V => ap_const_lv4_0,
        ap_return => mult_144_V_product_1_fu_358_ap_return);

    mult_152_V_product_1_fu_366 : component product_1
    port map (
        ap_ready => mult_152_V_product_1_fu_366_ap_ready,
        a_V => data_19_V_read_int_reg,
        w_V => ap_const_lv4_0,
        ap_return => mult_152_V_product_1_fu_366_ap_return);

    mult_160_V_product_1_fu_374 : component product_1
    port map (
        ap_ready => mult_160_V_product_1_fu_374_ap_ready,
        a_V => data_20_V_read_int_reg,
        w_V => ap_const_lv4_0,
        ap_return => mult_160_V_product_1_fu_374_ap_return);

    mult_166_V_product_1_fu_382 : component product_1
    port map (
        ap_ready => mult_166_V_product_1_fu_382_ap_ready,
        a_V => data_20_V_read_int_reg,
        w_V => ap_const_lv4_C,
        ap_return => mult_166_V_product_1_fu_382_ap_return);

    mult_168_V_product_1_fu_390 : component product_1
    port map (
        ap_ready => mult_168_V_product_1_fu_390_ap_ready,
        a_V => data_21_V_read_int_reg,
        w_V => ap_const_lv4_0,
        ap_return => mult_168_V_product_1_fu_390_ap_return);





    ap_ce_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ce_reg <= ap_ce;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce_reg)) then
                ap_return_0_int_reg <= acc_2_V_fu_661_p2;
                ap_return_1_int_reg <= acc_1_V_fu_679_p2;
                ap_return_2_int_reg <= acc_2_V_fu_661_p2;
                ap_return_3_int_reg <= acc_1_V_fu_679_p2;
                ap_return_4_int_reg <= acc_2_V_fu_661_p2;
                ap_return_5_int_reg <= acc_1_V_fu_679_p2;
                ap_return_6_int_reg <= acc_6_V_fu_689_p2;
                ap_return_7_int_reg <= acc_2_V_fu_661_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                data_0_V_read_int_reg <= data_0_V_read;
                data_10_V_read_int_reg <= data_10_V_read;
                data_11_V_read_int_reg <= data_11_V_read;
                data_12_V_read_int_reg <= data_12_V_read;
                data_13_V_read_int_reg <= data_13_V_read;
                data_14_V_read_int_reg <= data_14_V_read;
                data_15_V_read_int_reg <= data_15_V_read;
                data_16_V_read_int_reg <= data_16_V_read;
                data_17_V_read_int_reg <= data_17_V_read;
                data_18_V_read_int_reg <= data_18_V_read;
                data_19_V_read_int_reg <= data_19_V_read;
                data_1_V_read_int_reg <= data_1_V_read;
                data_20_V_read_int_reg <= data_20_V_read;
                data_21_V_read_int_reg <= data_21_V_read;
                data_2_V_read_int_reg <= data_2_V_read;
                data_3_V_read_int_reg <= data_3_V_read;
                data_4_V_read_int_reg <= data_4_V_read;
                data_5_V_read_int_reg <= data_5_V_read;
                data_6_V_read_int_reg <= data_6_V_read;
                data_7_V_read_int_reg <= data_7_V_read;
                data_8_V_read_int_reg <= data_8_V_read;
                data_9_V_read_int_reg <= data_9_V_read;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                mult_0_V_reg_742 <= mult_0_V_product_1_fu_206_ap_return;
                mult_104_V_reg_832 <= mult_104_V_product_1_fu_318_ap_return;
                mult_112_V_reg_839 <= mult_112_V_product_1_fu_326_ap_return;
                mult_120_V_reg_846 <= mult_120_V_product_1_fu_334_ap_return;
                mult_128_V_reg_853 <= mult_128_V_product_1_fu_342_ap_return;
                mult_136_V_reg_860 <= mult_136_V_product_1_fu_350_ap_return;
                mult_144_V_reg_867 <= mult_144_V_product_1_fu_358_ap_return;
                mult_152_V_reg_874 <= mult_152_V_product_1_fu_366_ap_return;
                mult_160_V_reg_880 <= mult_160_V_product_1_fu_374_ap_return;
                mult_166_V_reg_885 <= mult_166_V_product_1_fu_382_ap_return;
                mult_168_V_reg_890 <= mult_168_V_product_1_fu_390_ap_return;
                mult_16_V_reg_760 <= mult_16_V_product_1_fu_230_ap_return;
                mult_24_V_reg_766 <= mult_24_V_product_1_fu_238_ap_return;
                mult_32_V_reg_772 <= mult_32_V_product_1_fu_246_ap_return;
                mult_40_V_reg_778 <= mult_40_V_product_1_fu_254_ap_return;
                mult_48_V_reg_784 <= mult_48_V_product_1_fu_262_ap_return;
                mult_56_V_reg_791 <= mult_56_V_product_1_fu_270_ap_return;
                mult_64_V_reg_797 <= mult_64_V_product_1_fu_278_ap_return;
                mult_6_V_reg_748 <= mult_6_V_product_1_fu_214_ap_return;
                mult_72_V_reg_804 <= mult_72_V_product_1_fu_286_ap_return;
                mult_80_V_reg_811 <= mult_80_V_product_1_fu_294_ap_return;
                mult_88_V_reg_818 <= mult_88_V_product_1_fu_302_ap_return;
                mult_8_V_reg_753 <= mult_8_V_product_1_fu_222_ap_return;
                mult_96_V_reg_825 <= mult_96_V_product_1_fu_310_ap_return;
                tmp20_reg_907 <= tmp20_fu_484_p2;
                tmp23_reg_912 <= tmp23_fu_499_p2;
                tmp28_reg_917 <= tmp28_fu_523_p2;
                tmp31_reg_922 <= tmp31_fu_533_p2;
                tmp32_reg_927 <= tmp32_fu_538_p2;
                tmp38_reg_932 <= tmp38_fu_562_p2;
                tmp41_reg_937 <= tmp41_fu_572_p2;
                tmp46_reg_942 <= tmp46_fu_596_p2;
                tmp4_reg_897 <= tmp4_fu_411_p2;
                tmp58_reg_947 <= tmp58_fu_651_p2;
                tmp9_reg_902 <= tmp9_fu_435_p2;
            end if;
        end if;
    end process;
    acc_1_V_fu_679_p2 <= std_logic_vector(unsigned(tmp39_fu_674_p2) + unsigned(tmp29_fu_666_p2));
    acc_2_V_fu_661_p2 <= std_logic_vector(unsigned(tmp20_reg_907) + unsigned(tmp10_fu_657_p2));
    acc_6_V_fu_689_p2 <= std_logic_vector(unsigned(tmp58_reg_947) + unsigned(tmp47_fu_685_p2));
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_return_0_assign_proc : process(acc_2_V_fu_661_p2, ap_ce_reg, ap_return_0_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_0 <= ap_return_0_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_0 <= acc_2_V_fu_661_p2;
        end if; 
    end process;


    ap_return_1_assign_proc : process(acc_1_V_fu_679_p2, ap_ce_reg, ap_return_1_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_1 <= ap_return_1_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_1 <= acc_1_V_fu_679_p2;
        end if; 
    end process;


    ap_return_2_assign_proc : process(acc_2_V_fu_661_p2, ap_ce_reg, ap_return_2_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_2 <= ap_return_2_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_2 <= acc_2_V_fu_661_p2;
        end if; 
    end process;


    ap_return_3_assign_proc : process(acc_1_V_fu_679_p2, ap_ce_reg, ap_return_3_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_3 <= ap_return_3_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_3 <= acc_1_V_fu_679_p2;
        end if; 
    end process;


    ap_return_4_assign_proc : process(acc_2_V_fu_661_p2, ap_ce_reg, ap_return_4_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_4 <= ap_return_4_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_4 <= acc_2_V_fu_661_p2;
        end if; 
    end process;


    ap_return_5_assign_proc : process(acc_1_V_fu_679_p2, ap_ce_reg, ap_return_5_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_5 <= ap_return_5_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_5 <= acc_1_V_fu_679_p2;
        end if; 
    end process;


    ap_return_6_assign_proc : process(acc_6_V_fu_689_p2, ap_ce_reg, ap_return_6_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_6 <= ap_return_6_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_6 <= acc_6_V_fu_689_p2;
        end if; 
    end process;


    ap_return_7_assign_proc : process(acc_2_V_fu_661_p2, ap_ce_reg, ap_return_7_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_7 <= ap_return_7_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_7 <= acc_2_V_fu_661_p2;
        end if; 
    end process;

    tmp10_fu_657_p2 <= std_logic_vector(unsigned(tmp9_reg_902) + unsigned(tmp4_reg_897));
    tmp11_fu_441_p2 <= std_logic_vector(unsigned(mult_8_V_reg_753) + unsigned(mult_0_V_reg_742));
    tmp12_fu_445_p2 <= std_logic_vector(unsigned(mult_32_V_reg_772) + unsigned(mult_24_V_reg_766));
    tmp13_fu_449_p2 <= std_logic_vector(unsigned(tmp12_fu_445_p2) + unsigned(mult_16_V_reg_760));
    tmp14_fu_454_p2 <= std_logic_vector(unsigned(tmp13_fu_449_p2) + unsigned(tmp11_fu_441_p2));
    tmp15_fu_460_p2 <= std_logic_vector(unsigned(mult_40_V_reg_778) + unsigned(mult_56_V_reg_791));
    tmp16_fu_464_p2 <= std_logic_vector(unsigned(tmp15_fu_460_p2) + unsigned(mult_48_V_reg_784));
    tmp17_fu_469_p2 <= std_logic_vector(unsigned(mult_64_V_reg_797) + unsigned(mult_168_V_reg_890));
    tmp18_fu_473_p2 <= std_logic_vector(unsigned(tmp17_fu_469_p2) + unsigned(mult_72_V_reg_804));
    tmp19_fu_478_p2 <= std_logic_vector(unsigned(tmp18_fu_473_p2) + unsigned(tmp16_fu_464_p2));
    tmp1_fu_398_p2 <= std_logic_vector(unsigned(mult_152_V_reg_874) + unsigned(mult_160_V_reg_880));
    tmp20_fu_484_p2 <= std_logic_vector(unsigned(tmp19_fu_478_p2) + unsigned(tmp14_fu_454_p2));
    tmp21_fu_490_p2 <= std_logic_vector(unsigned(mult_144_V_reg_867) + unsigned(mult_136_V_reg_860));
    tmp22_fu_494_p2 <= std_logic_vector(unsigned(tmp21_fu_490_p2) + unsigned(mult_128_V_reg_853));
    tmp23_fu_499_p2 <= std_logic_vector(unsigned(tmp22_fu_494_p2) + unsigned(tmp1_fu_398_p2));
    tmp24_fu_505_p2 <= std_logic_vector(unsigned(mult_88_V_reg_818) + unsigned(mult_104_V_reg_832));
    tmp25_fu_509_p2 <= std_logic_vector(unsigned(tmp24_fu_505_p2) + unsigned(mult_96_V_reg_825));
    tmp26_fu_514_p2 <= std_logic_vector(unsigned(mult_112_V_reg_839) + unsigned(mult_8_V_reg_753));
    tmp27_fu_518_p2 <= std_logic_vector(unsigned(tmp26_fu_514_p2) + unsigned(mult_120_V_reg_846));
    tmp28_fu_523_p2 <= std_logic_vector(unsigned(tmp27_fu_518_p2) + unsigned(tmp25_fu_509_p2));
    tmp29_fu_666_p2 <= std_logic_vector(unsigned(tmp28_reg_917) + unsigned(tmp23_reg_912));
    tmp2_fu_402_p2 <= std_logic_vector(unsigned(mult_120_V_reg_846) + unsigned(mult_136_V_reg_860));
    tmp30_fu_529_p2 <= std_logic_vector(unsigned(mult_16_V_reg_760) + unsigned(mult_32_V_reg_772));
    tmp31_fu_533_p2 <= std_logic_vector(unsigned(tmp30_fu_529_p2) + unsigned(mult_0_V_reg_742));
    tmp32_fu_538_p2 <= std_logic_vector(unsigned(tmp15_fu_460_p2) + unsigned(mult_24_V_reg_766));
    tmp33_fu_670_p2 <= std_logic_vector(unsigned(tmp32_reg_927) + unsigned(tmp31_reg_922));
    tmp34_fu_543_p2 <= std_logic_vector(unsigned(mult_64_V_reg_797) + unsigned(mult_80_V_reg_811));
    tmp35_fu_547_p2 <= std_logic_vector(unsigned(tmp34_fu_543_p2) + unsigned(mult_48_V_reg_784));
    tmp36_fu_552_p2 <= std_logic_vector(unsigned(mult_168_V_reg_890) + unsigned(ap_const_lv17_1FFF0));
    tmp37_fu_557_p2 <= std_logic_vector(unsigned(tmp36_fu_552_p2) + unsigned(mult_72_V_reg_804));
    tmp38_fu_562_p2 <= std_logic_vector(unsigned(tmp37_fu_557_p2) + unsigned(tmp35_fu_547_p2));
    tmp39_fu_674_p2 <= std_logic_vector(unsigned(tmp38_reg_932) + unsigned(tmp33_fu_670_p2));
    tmp3_fu_406_p2 <= std_logic_vector(unsigned(tmp2_fu_402_p2) + unsigned(mult_144_V_reg_867));
    tmp40_fu_568_p2 <= std_logic_vector(unsigned(mult_6_V_reg_748) + unsigned(mult_8_V_reg_753));
    tmp41_fu_572_p2 <= std_logic_vector(unsigned(tmp13_fu_449_p2) + unsigned(tmp40_fu_568_p2));
    tmp42_fu_578_p2 <= std_logic_vector(unsigned(mult_48_V_reg_784) + unsigned(mult_56_V_reg_791));
    tmp43_fu_582_p2 <= std_logic_vector(unsigned(tmp42_fu_578_p2) + unsigned(mult_40_V_reg_778));
    tmp44_fu_587_p2 <= std_logic_vector(unsigned(mult_72_V_reg_804) + unsigned(mult_80_V_reg_811));
    tmp45_fu_591_p2 <= std_logic_vector(unsigned(tmp44_fu_587_p2) + unsigned(mult_64_V_reg_797));
    tmp46_fu_596_p2 <= std_logic_vector(unsigned(tmp45_fu_591_p2) + unsigned(tmp43_fu_582_p2));
    tmp47_fu_685_p2 <= std_logic_vector(unsigned(tmp46_reg_942) + unsigned(tmp41_reg_937));
    tmp48_fu_602_p2 <= std_logic_vector(unsigned(mult_96_V_reg_825) + unsigned(mult_104_V_reg_832));
    tmp49_fu_606_p2 <= std_logic_vector(unsigned(tmp48_fu_602_p2) + unsigned(mult_88_V_reg_818));
    tmp4_fu_411_p2 <= std_logic_vector(unsigned(tmp3_fu_406_p2) + unsigned(tmp1_fu_398_p2));
    tmp50_fu_611_p2 <= std_logic_vector(unsigned(mult_120_V_reg_846) + unsigned(mult_128_V_reg_853));
    tmp51_fu_615_p2 <= std_logic_vector(unsigned(tmp50_fu_611_p2) + unsigned(mult_112_V_reg_839));
    tmp52_fu_620_p2 <= std_logic_vector(unsigned(tmp51_fu_615_p2) + unsigned(tmp49_fu_606_p2));
    tmp53_fu_626_p2 <= std_logic_vector(unsigned(mult_144_V_reg_867) + unsigned(mult_152_V_reg_874));
    tmp54_fu_630_p2 <= std_logic_vector(unsigned(tmp53_fu_626_p2) + unsigned(mult_136_V_reg_860));
    tmp55_fu_635_p2 <= std_logic_vector(unsigned(mult_168_V_reg_890) + unsigned(ap_const_lv17_130));
    tmp56_fu_640_p2 <= std_logic_vector(unsigned(tmp55_fu_635_p2) + unsigned(mult_166_V_reg_885));
    tmp57_fu_645_p2 <= std_logic_vector(unsigned(tmp56_fu_640_p2) + unsigned(tmp54_fu_630_p2));
    tmp58_fu_651_p2 <= std_logic_vector(unsigned(tmp57_fu_645_p2) + unsigned(tmp52_fu_620_p2));
    tmp5_fu_417_p2 <= std_logic_vector(unsigned(mult_88_V_reg_818) + unsigned(mult_80_V_reg_811));
    tmp6_fu_421_p2 <= std_logic_vector(unsigned(tmp5_fu_417_p2) + unsigned(mult_128_V_reg_853));
    tmp7_fu_426_p2 <= std_logic_vector(unsigned(mult_112_V_reg_839) + unsigned(mult_104_V_reg_832));
    tmp8_fu_430_p2 <= std_logic_vector(unsigned(tmp7_fu_426_p2) + unsigned(mult_96_V_reg_825));
    tmp9_fu_435_p2 <= std_logic_vector(unsigned(tmp8_fu_430_p2) + unsigned(tmp6_fu_421_p2));
end behav;
