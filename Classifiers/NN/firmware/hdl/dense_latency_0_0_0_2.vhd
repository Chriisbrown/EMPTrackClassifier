-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dense_latency_0_0_0_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    data_0_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_1_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_2_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_3_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_4_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_5_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_6_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_7_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_8_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_9_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_10_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_11_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_12_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_13_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_14_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_15_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_16_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_17_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_18_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_19_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_20_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_10 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_11 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_12 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_13 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_14 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_15 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_16 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_17 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_18 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_19 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_20 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_21 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of dense_latency_0_0_0_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_66 : STD_LOGIC_VECTOR (7 downto 0) := "01100110";
    constant ap_const_lv8_F6 : STD_LOGIC_VECTOR (7 downto 0) := "11110110";
    constant ap_const_lv8_48 : STD_LOGIC_VECTOR (7 downto 0) := "01001000";
    constant ap_const_lv8_10 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_const_lv8_36 : STD_LOGIC_VECTOR (7 downto 0) := "00110110";
    constant ap_const_lv8_E : STD_LOGIC_VECTOR (7 downto 0) := "00001110";
    constant ap_const_lv8_20 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_const_lv8_FE : STD_LOGIC_VECTOR (7 downto 0) := "11111110";
    constant ap_const_lv8_E4 : STD_LOGIC_VECTOR (7 downto 0) := "11100100";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv8_44 : STD_LOGIC_VECTOR (7 downto 0) := "01000100";
    constant ap_const_lv8_EC : STD_LOGIC_VECTOR (7 downto 0) := "11101100";
    constant ap_const_lv16_F970 : STD_LOGIC_VECTOR (15 downto 0) := "1111100101110000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal data_5_V_read_4_reg_890 : STD_LOGIC_VECTOR (13 downto 0);
    signal data_3_V_read_4_reg_902 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_product_1_fu_242_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal mult_66_V_reg_969 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_1_fu_258_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal mult_88_V_reg_974 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_1_fu_266_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal mult_110_V_reg_980 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_1_fu_298_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal mult_176_V_reg_986 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_1_fu_306_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal mult_198_V_reg_992 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_1_fu_314_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal mult_220_V_reg_998 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_1_fu_322_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal mult_242_V_reg_1005 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_1_fu_330_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal mult_264_V_reg_1013 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_1_fu_338_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal mult_265_V_reg_1019 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_1_fu_346_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal mult_282_V_reg_1024 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_1_V_4_fu_382_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_1_V_4_reg_1029 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp18_fu_388_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp18_reg_1035 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp26_fu_394_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp26_reg_1042 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp53_fu_418_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp53_reg_1047 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_1_fu_234_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal mult_128_V_reg_1052 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp12_fu_445_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp12_reg_1057 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp15_fu_462_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp15_reg_1062 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp17_fu_468_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp17_reg_1067 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp23_fu_487_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp23_reg_1072 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp27_fu_499_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp27_reg_1077 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp29_fu_508_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp29_reg_1082 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp31_fu_514_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp31_reg_1087 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp32_fu_519_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp32_reg_1092 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp36_fu_537_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp36_reg_1097 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp40_fu_552_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp40_reg_1103 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp42_fu_562_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp42_reg_1108 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp45_fu_567_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp45_reg_1114 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp47_fu_577_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp47_reg_1119 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp57_fu_583_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp57_reg_1124 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp59_fu_593_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp59_reg_1129 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp65_fu_623_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp65_reg_1134 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_port_reg_data_13_V_read : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_port_reg_data_14_V_read : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_port_reg_data_15_V_read : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_port_reg_data_16_V_read : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_port_reg_data_17_V_read : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_port_reg_data_18_V_read : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_port_reg_data_19_V_read : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_port_reg_data_20_V_read : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_product_1_fu_218_a_V : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_product_1_fu_218_w_V : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_product_1_fu_218_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_1_fu_218_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_226_a_V : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_product_1_fu_226_w_V : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_product_1_fu_226_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_1_fu_226_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_234_a_V : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_product_1_fu_234_w_V : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_product_1_fu_234_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_242_a_V : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_product_1_fu_242_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_250_a_V : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_product_1_fu_250_w_V : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_product_1_fu_250_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_1_fu_250_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_258_a_V : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_product_1_fu_258_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_266_a_V : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_product_1_fu_266_w_V : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_product_1_fu_266_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_274_a_V : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_product_1_fu_274_w_V : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_product_1_fu_274_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_1_fu_274_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_282_a_V : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_product_1_fu_282_w_V : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_product_1_fu_282_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_1_fu_282_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_290_a_V : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_product_1_fu_290_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_1_fu_290_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_298_a_V : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_product_1_fu_298_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_306_a_V : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_product_1_fu_306_w_V : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_product_1_fu_306_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_314_a_V : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_product_1_fu_314_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_322_a_V : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_product_1_fu_322_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_330_a_V : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_product_1_fu_330_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_338_a_V : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_product_1_fu_338_w_V : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_product_1_fu_338_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_346_ap_ce : STD_LOGIC;
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal tmp1_fu_376_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp51_fu_406_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp52_fu_412_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp50_fu_400_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp2_fu_424_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp11_fu_439_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp10_fu_433_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp14_fu_456_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp13_fu_451_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_1_V_5_fu_428_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp21_fu_477_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp22_fu_482_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp20_fu_473_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp25_fu_493_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp28_fu_504_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp34_fu_525_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp35_fu_531_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp39_fu_548_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp38_fu_543_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp41_fu_558_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp46_fu_571_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp58_fu_587_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp61_fu_599_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp63_fu_611_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp64_fu_617_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp62_fu_605_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp19_fu_633_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp24_fu_637_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp16_fu_629_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp33_fu_652_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp37_fu_656_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp30_fu_648_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp43_fu_667_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp48_fu_676_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp49_fu_680_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp44_fu_671_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp54_fu_691_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp55_fu_695_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp60_fu_705_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp66_fu_709_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp56_fu_700_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_2_V_fu_642_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_1_V_fu_661_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_4_V_fu_685_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_18_V_fu_714_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to2 : STD_LOGIC;
    signal ap_idle_pp0_0to1 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component product_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        a_V : IN STD_LOGIC_VECTOR (13 downto 0);
        w_V : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;



begin
    grp_product_1_fu_218 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => grp_product_1_fu_218_a_V,
        w_V => grp_product_1_fu_218_w_V,
        ap_return => grp_product_1_fu_218_ap_return,
        ap_ce => grp_product_1_fu_218_ap_ce);

    grp_product_1_fu_226 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => grp_product_1_fu_226_a_V,
        w_V => grp_product_1_fu_226_w_V,
        ap_return => grp_product_1_fu_226_ap_return,
        ap_ce => grp_product_1_fu_226_ap_ce);

    grp_product_1_fu_234 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => grp_product_1_fu_234_a_V,
        w_V => grp_product_1_fu_234_w_V,
        ap_return => grp_product_1_fu_234_ap_return,
        ap_ce => grp_product_1_fu_234_ap_ce);

    grp_product_1_fu_242 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => grp_product_1_fu_242_a_V,
        w_V => ap_const_lv8_0,
        ap_return => grp_product_1_fu_242_ap_return,
        ap_ce => grp_product_1_fu_242_ap_ce);

    grp_product_1_fu_250 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => grp_product_1_fu_250_a_V,
        w_V => grp_product_1_fu_250_w_V,
        ap_return => grp_product_1_fu_250_ap_return,
        ap_ce => grp_product_1_fu_250_ap_ce);

    grp_product_1_fu_258 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => grp_product_1_fu_258_a_V,
        w_V => ap_const_lv8_0,
        ap_return => grp_product_1_fu_258_ap_return,
        ap_ce => grp_product_1_fu_258_ap_ce);

    grp_product_1_fu_266 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => grp_product_1_fu_266_a_V,
        w_V => grp_product_1_fu_266_w_V,
        ap_return => grp_product_1_fu_266_ap_return,
        ap_ce => grp_product_1_fu_266_ap_ce);

    grp_product_1_fu_274 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => grp_product_1_fu_274_a_V,
        w_V => grp_product_1_fu_274_w_V,
        ap_return => grp_product_1_fu_274_ap_return,
        ap_ce => grp_product_1_fu_274_ap_ce);

    grp_product_1_fu_282 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => grp_product_1_fu_282_a_V,
        w_V => grp_product_1_fu_282_w_V,
        ap_return => grp_product_1_fu_282_ap_return,
        ap_ce => grp_product_1_fu_282_ap_ce);

    grp_product_1_fu_290 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => grp_product_1_fu_290_a_V,
        w_V => ap_const_lv8_0,
        ap_return => grp_product_1_fu_290_ap_return,
        ap_ce => grp_product_1_fu_290_ap_ce);

    grp_product_1_fu_298 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => grp_product_1_fu_298_a_V,
        w_V => ap_const_lv8_0,
        ap_return => grp_product_1_fu_298_ap_return,
        ap_ce => grp_product_1_fu_298_ap_ce);

    grp_product_1_fu_306 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => grp_product_1_fu_306_a_V,
        w_V => grp_product_1_fu_306_w_V,
        ap_return => grp_product_1_fu_306_ap_return,
        ap_ce => grp_product_1_fu_306_ap_ce);

    grp_product_1_fu_314 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => grp_product_1_fu_314_a_V,
        w_V => ap_const_lv8_0,
        ap_return => grp_product_1_fu_314_ap_return,
        ap_ce => grp_product_1_fu_314_ap_ce);

    grp_product_1_fu_322 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => grp_product_1_fu_322_a_V,
        w_V => ap_const_lv8_0,
        ap_return => grp_product_1_fu_322_ap_return,
        ap_ce => grp_product_1_fu_322_ap_ce);

    grp_product_1_fu_330 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => grp_product_1_fu_330_a_V,
        w_V => ap_const_lv8_0,
        ap_return => grp_product_1_fu_330_ap_return,
        ap_ce => grp_product_1_fu_330_ap_ce);

    grp_product_1_fu_338 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => grp_product_1_fu_338_a_V,
        w_V => grp_product_1_fu_338_w_V,
        ap_return => grp_product_1_fu_338_ap_return,
        ap_ce => grp_product_1_fu_338_ap_ce);

    grp_product_1_fu_346 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => data_12_V_read,
        w_V => ap_const_lv8_EC,
        ap_return => grp_product_1_fu_346_ap_return,
        ap_ce => grp_product_1_fu_346_ap_ce);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                acc_1_V_4_reg_1029 <= acc_1_V_4_fu_382_p2;
                mult_282_V_reg_1024 <= grp_product_1_fu_346_ap_return;
                tmp18_reg_1035 <= tmp18_fu_388_p2;
                tmp26_reg_1042 <= tmp26_fu_394_p2;
                tmp53_reg_1047 <= tmp53_fu_418_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_port_reg_data_13_V_read <= data_13_V_read;
                ap_port_reg_data_14_V_read <= data_14_V_read;
                ap_port_reg_data_15_V_read <= data_15_V_read;
                ap_port_reg_data_16_V_read <= data_16_V_read;
                ap_port_reg_data_17_V_read <= data_17_V_read;
                ap_port_reg_data_18_V_read <= data_18_V_read;
                ap_port_reg_data_19_V_read <= data_19_V_read;
                ap_port_reg_data_20_V_read <= data_20_V_read;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                data_3_V_read_4_reg_902 <= data_3_V_read;
                data_5_V_read_4_reg_890 <= data_5_V_read;
                tmp12_reg_1057 <= tmp12_fu_445_p2;
                tmp15_reg_1062 <= tmp15_fu_462_p2;
                tmp17_reg_1067 <= tmp17_fu_468_p2;
                tmp23_reg_1072 <= tmp23_fu_487_p2;
                tmp27_reg_1077 <= tmp27_fu_499_p2;
                tmp29_reg_1082 <= tmp29_fu_508_p2;
                tmp31_reg_1087 <= tmp31_fu_514_p2;
                tmp32_reg_1092 <= tmp32_fu_519_p2;
                tmp36_reg_1097 <= tmp36_fu_537_p2;
                tmp40_reg_1103 <= tmp40_fu_552_p2;
                tmp42_reg_1108 <= tmp42_fu_562_p2;
                tmp45_reg_1114 <= tmp45_fu_567_p2;
                tmp47_reg_1119 <= tmp47_fu_577_p2;
                tmp57_reg_1124 <= tmp57_fu_583_p2;
                tmp59_reg_1129 <= tmp59_fu_593_p2;
                tmp65_reg_1134 <= tmp65_fu_623_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then
                mult_110_V_reg_980 <= grp_product_1_fu_266_ap_return;
                mult_176_V_reg_986 <= grp_product_1_fu_298_ap_return;
                mult_198_V_reg_992 <= grp_product_1_fu_306_ap_return;
                mult_220_V_reg_998 <= grp_product_1_fu_314_ap_return;
                mult_242_V_reg_1005 <= grp_product_1_fu_322_ap_return;
                mult_264_V_reg_1013 <= grp_product_1_fu_330_ap_return;
                mult_265_V_reg_1019 <= grp_product_1_fu_338_ap_return;
                mult_66_V_reg_969 <= grp_product_1_fu_242_ap_return;
                mult_88_V_reg_974 <= grp_product_1_fu_258_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                mult_128_V_reg_1052 <= grp_product_1_fu_234_ap_return;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_block_pp0_stage1_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to2, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0_1to2 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_reset_idle_pp0 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    acc_18_V_fu_714_p2 <= std_logic_vector(unsigned(tmp66_fu_709_p2) + unsigned(tmp56_fu_700_p2));
    acc_1_V_4_fu_382_p2 <= std_logic_vector(unsigned(tmp1_fu_376_p2) + unsigned(grp_product_1_fu_218_ap_return));
    acc_1_V_5_fu_428_p2 <= std_logic_vector(unsigned(tmp2_fu_424_p2) + unsigned(acc_1_V_4_reg_1029));
    acc_1_V_fu_661_p2 <= std_logic_vector(unsigned(tmp37_fu_656_p2) + unsigned(tmp30_fu_648_p2));
    acc_2_V_fu_642_p2 <= std_logic_vector(unsigned(tmp24_fu_637_p2) + unsigned(tmp16_fu_629_p2));
    acc_4_V_fu_685_p2 <= std_logic_vector(unsigned(tmp49_fu_680_p2) + unsigned(tmp44_fu_671_p2));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, ap_ce)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_const_logic_0 = ap_ce) or ((ap_start = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage1_subdone <= (ap_const_logic_0 = ap_ce);
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_ce)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to2_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to2 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to1 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= acc_2_V_fu_642_p2;
    ap_return_1 <= acc_1_V_fu_661_p2;
    ap_return_10 <= acc_2_V_fu_642_p2;
    ap_return_11 <= acc_2_V_fu_642_p2;
    ap_return_12 <= acc_2_V_fu_642_p2;
    ap_return_13 <= acc_2_V_fu_642_p2;
    ap_return_14 <= acc_2_V_fu_642_p2;
    ap_return_15 <= acc_2_V_fu_642_p2;
    ap_return_16 <= acc_2_V_fu_642_p2;
    ap_return_17 <= acc_2_V_fu_642_p2;
    ap_return_18 <= acc_18_V_fu_714_p2;
    ap_return_19 <= acc_2_V_fu_642_p2;
    ap_return_2 <= acc_2_V_fu_642_p2;
    ap_return_20 <= acc_2_V_fu_642_p2;
    ap_return_21 <= acc_2_V_fu_642_p2;
    ap_return_3 <= acc_2_V_fu_642_p2;
    ap_return_4 <= acc_4_V_fu_685_p2;
    ap_return_5 <= acc_2_V_fu_642_p2;
    ap_return_6 <= acc_2_V_fu_642_p2;
    ap_return_7 <= acc_2_V_fu_642_p2;
    ap_return_8 <= acc_2_V_fu_642_p2;
    ap_return_9 <= acc_2_V_fu_642_p2;

    grp_product_1_fu_218_a_V_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, data_0_V_read, data_3_V_read_4_reg_902, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_product_1_fu_218_a_V <= data_3_V_read_4_reg_902;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_product_1_fu_218_a_V <= data_0_V_read;
            else 
                grp_product_1_fu_218_a_V <= "XXXXXXXXXXXXXX";
            end if;
        else 
            grp_product_1_fu_218_a_V <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_product_1_fu_218_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))))) then 
            grp_product_1_fu_218_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_218_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_218_w_V_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_product_1_fu_218_w_V <= ap_const_lv8_66;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_product_1_fu_218_w_V <= ap_const_lv8_0;
            else 
                grp_product_1_fu_218_w_V <= "XXXXXXXX";
            end if;
        else 
            grp_product_1_fu_218_w_V <= "XXXXXXXX";
        end if; 
    end process;


    grp_product_1_fu_226_a_V_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, data_1_V_read, data_5_V_read_4_reg_890, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_product_1_fu_226_a_V <= data_5_V_read_4_reg_890;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_product_1_fu_226_a_V <= data_1_V_read;
            else 
                grp_product_1_fu_226_a_V <= "XXXXXXXXXXXXXX";
            end if;
        else 
            grp_product_1_fu_226_a_V <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_product_1_fu_226_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))))) then 
            grp_product_1_fu_226_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_226_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_226_w_V_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_product_1_fu_226_w_V <= ap_const_lv8_F6;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_product_1_fu_226_w_V <= ap_const_lv8_0;
            else 
                grp_product_1_fu_226_w_V <= "XXXXXXXX";
            end if;
        else 
            grp_product_1_fu_226_w_V <= "XXXXXXXX";
        end if; 
    end process;


    grp_product_1_fu_234_a_V_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, data_2_V_read, data_5_V_read_4_reg_890, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_product_1_fu_234_a_V <= data_5_V_read_4_reg_890;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_product_1_fu_234_a_V <= data_2_V_read;
            else 
                grp_product_1_fu_234_a_V <= "XXXXXXXXXXXXXX";
            end if;
        else 
            grp_product_1_fu_234_a_V <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_product_1_fu_234_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))))) then 
            grp_product_1_fu_234_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_234_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_234_w_V_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_product_1_fu_234_w_V <= ap_const_lv8_48;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_product_1_fu_234_w_V <= ap_const_lv8_0;
            else 
                grp_product_1_fu_234_w_V <= "XXXXXXXX";
            end if;
        else 
            grp_product_1_fu_234_w_V <= "XXXXXXXX";
        end if; 
    end process;


    grp_product_1_fu_242_a_V_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, data_3_V_read, ap_port_reg_data_13_V_read, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_product_1_fu_242_a_V <= ap_port_reg_data_13_V_read;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_product_1_fu_242_a_V <= data_3_V_read;
            else 
                grp_product_1_fu_242_a_V <= "XXXXXXXXXXXXXX";
            end if;
        else 
            grp_product_1_fu_242_a_V <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_product_1_fu_242_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))))) then 
            grp_product_1_fu_242_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_242_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_250_a_V_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, data_3_V_read, ap_port_reg_data_14_V_read, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_product_1_fu_250_a_V <= ap_port_reg_data_14_V_read;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_product_1_fu_250_a_V <= data_3_V_read;
            else 
                grp_product_1_fu_250_a_V <= "XXXXXXXXXXXXXX";
            end if;
        else 
            grp_product_1_fu_250_a_V <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_product_1_fu_250_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))))) then 
            grp_product_1_fu_250_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_250_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_250_w_V_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_product_1_fu_250_w_V <= ap_const_lv8_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_product_1_fu_250_w_V <= ap_const_lv8_10;
            else 
                grp_product_1_fu_250_w_V <= "XXXXXXXX";
            end if;
        else 
            grp_product_1_fu_250_w_V <= "XXXXXXXX";
        end if; 
    end process;


    grp_product_1_fu_258_a_V_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, data_4_V_read, ap_port_reg_data_15_V_read, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_product_1_fu_258_a_V <= ap_port_reg_data_15_V_read;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_product_1_fu_258_a_V <= data_4_V_read;
            else 
                grp_product_1_fu_258_a_V <= "XXXXXXXXXXXXXX";
            end if;
        else 
            grp_product_1_fu_258_a_V <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_product_1_fu_258_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))))) then 
            grp_product_1_fu_258_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_258_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_266_a_V_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, data_5_V_read, ap_port_reg_data_15_V_read, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_product_1_fu_266_a_V <= ap_port_reg_data_15_V_read;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_product_1_fu_266_a_V <= data_5_V_read;
            else 
                grp_product_1_fu_266_a_V <= "XXXXXXXXXXXXXX";
            end if;
        else 
            grp_product_1_fu_266_a_V <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_product_1_fu_266_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))))) then 
            grp_product_1_fu_266_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_266_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_266_w_V_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_product_1_fu_266_w_V <= ap_const_lv8_36;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_product_1_fu_266_w_V <= ap_const_lv8_0;
            else 
                grp_product_1_fu_266_w_V <= "XXXXXXXX";
            end if;
        else 
            grp_product_1_fu_266_w_V <= "XXXXXXXX";
        end if; 
    end process;


    grp_product_1_fu_274_a_V_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, data_6_V_read, ap_port_reg_data_15_V_read, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_product_1_fu_274_a_V <= ap_port_reg_data_15_V_read;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_product_1_fu_274_a_V <= data_6_V_read;
            else 
                grp_product_1_fu_274_a_V <= "XXXXXXXXXXXXXX";
            end if;
        else 
            grp_product_1_fu_274_a_V <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_product_1_fu_274_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))))) then 
            grp_product_1_fu_274_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_274_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_274_w_V_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_product_1_fu_274_w_V <= ap_const_lv8_E;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_product_1_fu_274_w_V <= ap_const_lv8_0;
            else 
                grp_product_1_fu_274_w_V <= "XXXXXXXX";
            end if;
        else 
            grp_product_1_fu_274_w_V <= "XXXXXXXX";
        end if; 
    end process;


    grp_product_1_fu_282_a_V_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, data_6_V_read, ap_port_reg_data_15_V_read, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_product_1_fu_282_a_V <= ap_port_reg_data_15_V_read;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_product_1_fu_282_a_V <= data_6_V_read;
            else 
                grp_product_1_fu_282_a_V <= "XXXXXXXXXXXXXX";
            end if;
        else 
            grp_product_1_fu_282_a_V <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_product_1_fu_282_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))))) then 
            grp_product_1_fu_282_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_282_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_282_w_V_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_product_1_fu_282_w_V <= ap_const_lv8_FE;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_product_1_fu_282_w_V <= ap_const_lv8_20;
            else 
                grp_product_1_fu_282_w_V <= "XXXXXXXX";
            end if;
        else 
            grp_product_1_fu_282_w_V <= "XXXXXXXX";
        end if; 
    end process;


    grp_product_1_fu_290_a_V_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, data_7_V_read, ap_port_reg_data_16_V_read, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_product_1_fu_290_a_V <= ap_port_reg_data_16_V_read;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_product_1_fu_290_a_V <= data_7_V_read;
            else 
                grp_product_1_fu_290_a_V <= "XXXXXXXXXXXXXX";
            end if;
        else 
            grp_product_1_fu_290_a_V <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_product_1_fu_290_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))))) then 
            grp_product_1_fu_290_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_290_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_298_a_V_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, data_8_V_read, ap_port_reg_data_17_V_read, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_product_1_fu_298_a_V <= ap_port_reg_data_17_V_read;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_product_1_fu_298_a_V <= data_8_V_read;
            else 
                grp_product_1_fu_298_a_V <= "XXXXXXXXXXXXXX";
            end if;
        else 
            grp_product_1_fu_298_a_V <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_product_1_fu_298_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))))) then 
            grp_product_1_fu_298_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_298_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_306_a_V_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, data_9_V_read, ap_port_reg_data_17_V_read, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_product_1_fu_306_a_V <= ap_port_reg_data_17_V_read;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_product_1_fu_306_a_V <= data_9_V_read;
            else 
                grp_product_1_fu_306_a_V <= "XXXXXXXXXXXXXX";
            end if;
        else 
            grp_product_1_fu_306_a_V <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_product_1_fu_306_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))))) then 
            grp_product_1_fu_306_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_306_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_306_w_V_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_product_1_fu_306_w_V <= ap_const_lv8_E4;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_product_1_fu_306_w_V <= ap_const_lv8_0;
            else 
                grp_product_1_fu_306_w_V <= "XXXXXXXX";
            end if;
        else 
            grp_product_1_fu_306_w_V <= "XXXXXXXX";
        end if; 
    end process;


    grp_product_1_fu_314_a_V_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, data_10_V_read, ap_port_reg_data_18_V_read, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_product_1_fu_314_a_V <= ap_port_reg_data_18_V_read;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_product_1_fu_314_a_V <= data_10_V_read;
            else 
                grp_product_1_fu_314_a_V <= "XXXXXXXXXXXXXX";
            end if;
        else 
            grp_product_1_fu_314_a_V <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_product_1_fu_314_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))))) then 
            grp_product_1_fu_314_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_314_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_322_a_V_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, data_11_V_read, ap_port_reg_data_19_V_read, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_product_1_fu_322_a_V <= ap_port_reg_data_19_V_read;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_product_1_fu_322_a_V <= data_11_V_read;
            else 
                grp_product_1_fu_322_a_V <= "XXXXXXXXXXXXXX";
            end if;
        else 
            grp_product_1_fu_322_a_V <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_product_1_fu_322_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))))) then 
            grp_product_1_fu_322_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_322_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_330_a_V_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, data_12_V_read, ap_port_reg_data_20_V_read, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_product_1_fu_330_a_V <= ap_port_reg_data_20_V_read;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_product_1_fu_330_a_V <= data_12_V_read;
            else 
                grp_product_1_fu_330_a_V <= "XXXXXXXXXXXXXX";
            end if;
        else 
            grp_product_1_fu_330_a_V <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_product_1_fu_330_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))))) then 
            grp_product_1_fu_330_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_330_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_338_a_V_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, data_12_V_read, ap_port_reg_data_20_V_read, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_product_1_fu_338_a_V <= ap_port_reg_data_20_V_read;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_product_1_fu_338_a_V <= data_12_V_read;
            else 
                grp_product_1_fu_338_a_V <= "XXXXXXXXXXXXXX";
            end if;
        else 
            grp_product_1_fu_338_a_V <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_product_1_fu_338_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))))) then 
            grp_product_1_fu_338_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_338_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_338_w_V_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_product_1_fu_338_w_V <= ap_const_lv8_44;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_product_1_fu_338_w_V <= ap_const_lv8_2;
            else 
                grp_product_1_fu_338_w_V <= "XXXXXXXX";
            end if;
        else 
            grp_product_1_fu_338_w_V <= "XXXXXXXX";
        end if; 
    end process;


    grp_product_1_fu_346_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))))) then 
            grp_product_1_fu_346_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_346_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    tmp10_fu_433_p2 <= std_logic_vector(unsigned(grp_product_1_fu_314_ap_return) + unsigned(grp_product_1_fu_322_ap_return));
    tmp11_fu_439_p2 <= std_logic_vector(unsigned(grp_product_1_fu_298_ap_return) + unsigned(grp_product_1_fu_290_ap_return));
    tmp12_fu_445_p2 <= std_logic_vector(unsigned(tmp11_fu_439_p2) + unsigned(tmp10_fu_433_p2));
    tmp13_fu_451_p2 <= std_logic_vector(unsigned(grp_product_1_fu_242_ap_return) + unsigned(mult_264_V_reg_1013));
    tmp14_fu_456_p2 <= std_logic_vector(unsigned(grp_product_1_fu_258_ap_return) + unsigned(grp_product_1_fu_250_ap_return));
    tmp15_fu_462_p2 <= std_logic_vector(unsigned(tmp14_fu_456_p2) + unsigned(tmp13_fu_451_p2));
    tmp16_fu_629_p2 <= std_logic_vector(unsigned(tmp15_reg_1062) + unsigned(tmp12_reg_1057));
    tmp17_fu_468_p2 <= std_logic_vector(unsigned(mult_110_V_reg_980) + unsigned(acc_1_V_5_fu_428_p2));
    tmp18_fu_388_p2 <= std_logic_vector(unsigned(grp_product_1_fu_290_ap_return) + unsigned(grp_product_1_fu_274_ap_return));
    tmp19_fu_633_p2 <= std_logic_vector(unsigned(tmp18_reg_1035) + unsigned(tmp17_reg_1067));
    tmp1_fu_376_p2 <= std_logic_vector(unsigned(grp_product_1_fu_226_ap_return) + unsigned(grp_product_1_fu_234_ap_return));
    tmp20_fu_473_p2 <= std_logic_vector(unsigned(mult_198_V_reg_992) + unsigned(mult_176_V_reg_986));
    tmp21_fu_477_p2 <= std_logic_vector(unsigned(mult_220_V_reg_998) + unsigned(grp_product_1_fu_330_ap_return));
    tmp22_fu_482_p2 <= std_logic_vector(unsigned(tmp21_fu_477_p2) + unsigned(mult_242_V_reg_1005));
    tmp23_fu_487_p2 <= std_logic_vector(unsigned(tmp22_fu_482_p2) + unsigned(tmp20_fu_473_p2));
    tmp24_fu_637_p2 <= std_logic_vector(unsigned(tmp23_reg_1072) + unsigned(tmp19_fu_633_p2));
    tmp25_fu_493_p2 <= std_logic_vector(unsigned(acc_1_V_5_fu_428_p2) + unsigned(grp_product_1_fu_226_ap_return));
    tmp26_fu_394_p2 <= std_logic_vector(unsigned(grp_product_1_fu_282_ap_return) + unsigned(grp_product_1_fu_290_ap_return));
    tmp27_fu_499_p2 <= std_logic_vector(unsigned(tmp26_reg_1042) + unsigned(tmp25_fu_493_p2));
    tmp28_fu_504_p2 <= std_logic_vector(unsigned(mult_220_V_reg_998) + unsigned(mult_242_V_reg_1005));
    tmp29_fu_508_p2 <= std_logic_vector(unsigned(tmp28_fu_504_p2) + unsigned(tmp20_fu_473_p2));
    tmp2_fu_424_p2 <= std_logic_vector(unsigned(mult_66_V_reg_969) + unsigned(mult_88_V_reg_974));
    tmp30_fu_648_p2 <= std_logic_vector(unsigned(tmp29_reg_1082) + unsigned(tmp27_reg_1077));
    tmp31_fu_514_p2 <= std_logic_vector(unsigned(mult_265_V_reg_1019) + unsigned(grp_product_1_fu_242_ap_return));
    tmp32_fu_519_p2 <= std_logic_vector(unsigned(grp_product_1_fu_250_ap_return) + unsigned(grp_product_1_fu_266_ap_return));
    tmp33_fu_652_p2 <= std_logic_vector(unsigned(tmp32_reg_1092) + unsigned(tmp31_reg_1087));
    tmp34_fu_525_p2 <= std_logic_vector(unsigned(grp_product_1_fu_322_ap_return) + unsigned(grp_product_1_fu_330_ap_return));
    tmp35_fu_531_p2 <= std_logic_vector(unsigned(tmp34_fu_525_p2) + unsigned(grp_product_1_fu_314_ap_return));
    tmp36_fu_537_p2 <= std_logic_vector(unsigned(tmp35_fu_531_p2) + unsigned(tmp11_fu_439_p2));
    tmp37_fu_656_p2 <= std_logic_vector(unsigned(tmp36_reg_1097) + unsigned(tmp33_fu_652_p2));
    tmp38_fu_543_p2 <= std_logic_vector(unsigned(acc_1_V_4_reg_1029) + unsigned(grp_product_1_fu_218_ap_return));
    tmp39_fu_548_p2 <= std_logic_vector(unsigned(mult_88_V_reg_974) + unsigned(mult_110_V_reg_980));
    tmp40_fu_552_p2 <= std_logic_vector(unsigned(tmp39_fu_548_p2) + unsigned(tmp38_fu_543_p2));
    tmp41_fu_558_p2 <= std_logic_vector(unsigned(mult_198_V_reg_992) + unsigned(mult_220_V_reg_998));
    tmp42_fu_562_p2 <= std_logic_vector(unsigned(tmp41_fu_558_p2) + unsigned(mult_176_V_reg_986));
    tmp43_fu_667_p2 <= std_logic_vector(unsigned(tmp42_reg_1108) + unsigned(tmp18_reg_1035));
    tmp44_fu_671_p2 <= std_logic_vector(unsigned(tmp43_fu_667_p2) + unsigned(tmp40_reg_1103));
    tmp45_fu_567_p2 <= std_logic_vector(unsigned(mult_242_V_reg_1005) + unsigned(mult_264_V_reg_1013));
    tmp46_fu_571_p2 <= std_logic_vector(unsigned(grp_product_1_fu_250_ap_return) + unsigned(grp_product_1_fu_274_ap_return));
    tmp47_fu_577_p2 <= std_logic_vector(unsigned(tmp46_fu_571_p2) + unsigned(grp_product_1_fu_242_ap_return));
    tmp48_fu_676_p2 <= std_logic_vector(unsigned(tmp47_reg_1119) + unsigned(tmp45_reg_1114));
    tmp49_fu_680_p2 <= std_logic_vector(unsigned(tmp36_reg_1097) + unsigned(tmp48_fu_676_p2));
    tmp50_fu_400_p2 <= std_logic_vector(unsigned(grp_product_1_fu_218_ap_return) + unsigned(grp_product_1_fu_226_ap_return));
    tmp51_fu_406_p2 <= std_logic_vector(unsigned(grp_product_1_fu_250_ap_return) + unsigned(grp_product_1_fu_258_ap_return));
    tmp52_fu_412_p2 <= std_logic_vector(unsigned(tmp51_fu_406_p2) + unsigned(grp_product_1_fu_234_ap_return));
    tmp53_fu_418_p2 <= std_logic_vector(unsigned(tmp52_fu_412_p2) + unsigned(tmp50_fu_400_p2));
    tmp54_fu_691_p2 <= std_logic_vector(unsigned(tmp18_reg_1035) + unsigned(mult_128_V_reg_1052));
    tmp55_fu_695_p2 <= std_logic_vector(unsigned(tmp42_reg_1108) + unsigned(tmp54_fu_691_p2));
    tmp56_fu_700_p2 <= std_logic_vector(unsigned(tmp55_fu_695_p2) + unsigned(tmp53_reg_1047));
    tmp57_fu_583_p2 <= std_logic_vector(unsigned(mult_242_V_reg_1005) + unsigned(mult_282_V_reg_1024));
    tmp58_fu_587_p2 <= std_logic_vector(unsigned(grp_product_1_fu_250_ap_return) + unsigned(grp_product_1_fu_282_ap_return));
    tmp59_fu_593_p2 <= std_logic_vector(unsigned(tmp58_fu_587_p2) + unsigned(grp_product_1_fu_242_ap_return));
    tmp60_fu_705_p2 <= std_logic_vector(unsigned(tmp59_reg_1129) + unsigned(tmp57_reg_1124));
    tmp61_fu_599_p2 <= std_logic_vector(unsigned(grp_product_1_fu_306_ap_return) + unsigned(grp_product_1_fu_314_ap_return));
    tmp62_fu_605_p2 <= std_logic_vector(unsigned(tmp61_fu_599_p2) + unsigned(grp_product_1_fu_290_ap_return));
    tmp63_fu_611_p2 <= std_logic_vector(unsigned(grp_product_1_fu_338_ap_return) + unsigned(ap_const_lv16_F970));
    tmp64_fu_617_p2 <= std_logic_vector(unsigned(tmp63_fu_611_p2) + unsigned(grp_product_1_fu_322_ap_return));
    tmp65_fu_623_p2 <= std_logic_vector(unsigned(tmp64_fu_617_p2) + unsigned(tmp62_fu_605_p2));
    tmp66_fu_709_p2 <= std_logic_vector(unsigned(tmp65_reg_1134) + unsigned(tmp60_fu_705_p2));
end behav;
