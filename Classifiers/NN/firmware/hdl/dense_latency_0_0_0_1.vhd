-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dense_latency_0_0_0_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    data_0_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_2_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_5_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_9_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_14_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_17_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of dense_latency_0_0_0_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv14_3270 : STD_LOGIC_VECTOR (13 downto 0) := "11001001110000";
    constant ap_const_lv14_1500 : STD_LOGIC_VECTOR (13 downto 0) := "01010100000000";
    constant ap_const_lv14_252C : STD_LOGIC_VECTOR (13 downto 0) := "10010100101100";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";

    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp_75_fu_162_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_75_reg_292 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp2_fu_174_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp2_reg_297 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp6_fu_198_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp6_reg_302 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp14_fu_210_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp14_reg_307 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp16_fu_234_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp16_reg_312 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_1_fu_76_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_1_fu_76_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_84_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_1_fu_84_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_92_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_1_fu_92_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_100_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_1_fu_100_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_108_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_1_fu_108_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_116_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_1_fu_116_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_124_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_1_fu_124_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_132_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_1_fu_132_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_140_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_1_fu_140_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_148_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_1_fu_148_ap_ce : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp4_fu_168_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp3_fu_156_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp10_fu_186_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp9_fu_192_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp7_fu_180_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp15_fu_204_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp18_fu_216_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp19_fu_228_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp17_fu_222_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp12_fu_244_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp11_fu_248_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp1_fu_240_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_4_V_fu_253_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_ce_reg : STD_LOGIC;
    signal data_0_V_read_int_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal data_2_V_read_int_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal data_5_V_read_int_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal data_9_V_read_int_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal data_14_V_read_int_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal data_17_V_read_int_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_return_int_reg : STD_LOGIC_VECTOR (15 downto 0);

    component product_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        a_V : IN STD_LOGIC_VECTOR (13 downto 0);
        w_V : IN STD_LOGIC_VECTOR (13 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;



begin
    grp_product_1_fu_76 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => data_0_V_read_int_reg,
        w_V => ap_const_lv14_0,
        ap_return => grp_product_1_fu_76_ap_return,
        ap_ce => grp_product_1_fu_76_ap_ce);

    grp_product_1_fu_84 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => ap_const_lv14_0,
        w_V => ap_const_lv14_0,
        ap_return => grp_product_1_fu_84_ap_return,
        ap_ce => grp_product_1_fu_84_ap_ce);

    grp_product_1_fu_92 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => data_2_V_read_int_reg,
        w_V => ap_const_lv14_0,
        ap_return => grp_product_1_fu_92_ap_return,
        ap_ce => grp_product_1_fu_92_ap_ce);

    grp_product_1_fu_100 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => data_2_V_read_int_reg,
        w_V => ap_const_lv14_3270,
        ap_return => grp_product_1_fu_100_ap_return,
        ap_ce => grp_product_1_fu_100_ap_ce);

    grp_product_1_fu_108 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => data_5_V_read_int_reg,
        w_V => ap_const_lv14_0,
        ap_return => grp_product_1_fu_108_ap_return,
        ap_ce => grp_product_1_fu_108_ap_ce);

    grp_product_1_fu_116 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => data_5_V_read_int_reg,
        w_V => ap_const_lv14_1500,
        ap_return => grp_product_1_fu_116_ap_return,
        ap_ce => grp_product_1_fu_116_ap_ce);

    grp_product_1_fu_124 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => data_9_V_read_int_reg,
        w_V => ap_const_lv14_0,
        ap_return => grp_product_1_fu_124_ap_return,
        ap_ce => grp_product_1_fu_124_ap_ce);

    grp_product_1_fu_132 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => data_14_V_read_int_reg,
        w_V => ap_const_lv14_0,
        ap_return => grp_product_1_fu_132_ap_return,
        ap_ce => grp_product_1_fu_132_ap_ce);

    grp_product_1_fu_140 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => data_14_V_read_int_reg,
        w_V => ap_const_lv14_252C,
        ap_return => grp_product_1_fu_140_ap_return,
        ap_ce => grp_product_1_fu_140_ap_ce);

    grp_product_1_fu_148 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => data_17_V_read_int_reg,
        w_V => ap_const_lv14_0,
        ap_return => grp_product_1_fu_148_ap_return,
        ap_ce => grp_product_1_fu_148_ap_ce);





    ap_ce_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ce_reg <= ap_ce;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce_reg)) then
                ap_return_int_reg <= acc_4_V_fu_253_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                data_0_V_read_int_reg <= data_0_V_read;
                data_14_V_read_int_reg <= data_14_V_read;
                data_17_V_read_int_reg <= data_17_V_read;
                data_2_V_read_int_reg <= data_2_V_read;
                data_5_V_read_int_reg <= data_5_V_read;
                data_9_V_read_int_reg <= data_9_V_read;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then
                tmp14_reg_307 <= tmp14_fu_210_p2;
                tmp16_reg_312 <= tmp16_fu_234_p2;
                tmp2_reg_297 <= tmp2_fu_174_p2;
                tmp6_reg_302 <= tmp6_fu_198_p2;
                    tmp_75_reg_292(15 downto 1) <= tmp_75_fu_162_p2(15 downto 1);
            end if;
        end if;
    end process;
    tmp_75_reg_292(0) <= '0';
    acc_4_V_fu_253_p2 <= std_logic_vector(unsigned(tmp11_fu_248_p2) + unsigned(tmp1_fu_240_p2));
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_return_assign_proc : process(acc_4_V_fu_253_p2, ap_ce_reg, ap_return_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return <= ap_return_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return <= acc_4_V_fu_253_p2;
        end if; 
    end process;


    grp_product_1_fu_100_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_product_1_fu_100_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_100_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_108_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_product_1_fu_108_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_108_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_116_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_product_1_fu_116_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_116_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_124_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_product_1_fu_124_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_124_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_132_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_product_1_fu_132_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_132_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_140_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_product_1_fu_140_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_140_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_148_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_product_1_fu_148_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_148_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_76_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_product_1_fu_76_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_76_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_84_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_product_1_fu_84_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_84_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_92_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_product_1_fu_92_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_92_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    tmp10_fu_186_p2 <= std_logic_vector(unsigned(grp_product_1_fu_124_ap_return) + unsigned(grp_product_1_fu_84_ap_return));
    tmp11_fu_248_p2 <= std_logic_vector(unsigned(tmp16_reg_312) + unsigned(tmp12_fu_244_p2));
    tmp12_fu_244_p2 <= std_logic_vector(unsigned(tmp14_reg_307) + unsigned(tmp_75_reg_292));
    tmp14_fu_210_p2 <= std_logic_vector(unsigned(tmp15_fu_204_p2) + unsigned(grp_product_1_fu_84_ap_return));
    tmp15_fu_204_p2 <= std_logic_vector(unsigned(grp_product_1_fu_140_ap_return) + unsigned(grp_product_1_fu_84_ap_return));
    tmp16_fu_234_p2 <= std_logic_vector(unsigned(tmp19_fu_228_p2) + unsigned(tmp17_fu_222_p2));
    tmp17_fu_222_p2 <= std_logic_vector(unsigned(tmp18_fu_216_p2) + unsigned(grp_product_1_fu_84_ap_return));
    tmp18_fu_216_p2 <= std_logic_vector(unsigned(grp_product_1_fu_148_ap_return) + unsigned(grp_product_1_fu_84_ap_return));
    tmp19_fu_228_p2 <= std_logic_vector(unsigned(tmp_75_fu_162_p2) + unsigned(grp_product_1_fu_84_ap_return));
    tmp1_fu_240_p2 <= std_logic_vector(unsigned(tmp6_reg_302) + unsigned(tmp2_reg_297));
    tmp2_fu_174_p2 <= std_logic_vector(unsigned(tmp4_fu_168_p2) + unsigned(tmp3_fu_156_p2));
    tmp3_fu_156_p2 <= std_logic_vector(unsigned(grp_product_1_fu_76_ap_return) + unsigned(grp_product_1_fu_84_ap_return));
    tmp4_fu_168_p2 <= std_logic_vector(unsigned(tmp_75_fu_162_p2) + unsigned(grp_product_1_fu_100_ap_return));
    tmp6_fu_198_p2 <= std_logic_vector(unsigned(tmp9_fu_192_p2) + unsigned(tmp7_fu_180_p2));
    tmp7_fu_180_p2 <= std_logic_vector(unsigned(tmp_75_fu_162_p2) + unsigned(grp_product_1_fu_116_ap_return));
    tmp9_fu_192_p2 <= std_logic_vector(unsigned(tmp10_fu_186_p2) + unsigned(grp_product_1_fu_84_ap_return));
    tmp_75_fu_162_p2 <= std_logic_vector(shift_left(unsigned(grp_product_1_fu_84_ap_return),to_integer(unsigned('0' & ap_const_lv16_1(16-1 downto 0)))));
end behav;
