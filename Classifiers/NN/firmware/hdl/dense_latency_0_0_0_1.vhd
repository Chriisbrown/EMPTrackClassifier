-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dense_latency_0_0_0_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    data_0_V_read : IN STD_LOGIC_VECTOR (14 downto 0);
    data_1_V_read : IN STD_LOGIC_VECTOR (14 downto 0);
    data_2_V_read : IN STD_LOGIC_VECTOR (14 downto 0);
    data_3_V_read : IN STD_LOGIC_VECTOR (14 downto 0);
    data_4_V_read : IN STD_LOGIC_VECTOR (14 downto 0);
    data_5_V_read : IN STD_LOGIC_VECTOR (14 downto 0);
    data_6_V_read : IN STD_LOGIC_VECTOR (14 downto 0);
    data_7_V_read : IN STD_LOGIC_VECTOR (14 downto 0);
    data_8_V_read : IN STD_LOGIC_VECTOR (14 downto 0);
    data_9_V_read : IN STD_LOGIC_VECTOR (14 downto 0);
    data_10_V_read : IN STD_LOGIC_VECTOR (14 downto 0);
    data_11_V_read : IN STD_LOGIC_VECTOR (14 downto 0);
    data_12_V_read : IN STD_LOGIC_VECTOR (14 downto 0);
    data_13_V_read : IN STD_LOGIC_VECTOR (14 downto 0);
    data_14_V_read : IN STD_LOGIC_VECTOR (14 downto 0);
    data_15_V_read : IN STD_LOGIC_VECTOR (14 downto 0);
    data_16_V_read : IN STD_LOGIC_VECTOR (14 downto 0);
    data_17_V_read : IN STD_LOGIC_VECTOR (14 downto 0);
    data_18_V_read : IN STD_LOGIC_VECTOR (14 downto 0);
    data_19_V_read : IN STD_LOGIC_VECTOR (14 downto 0);
    data_20_V_read : IN STD_LOGIC_VECTOR (14 downto 0);
    data_21_V_read : IN STD_LOGIC_VECTOR (14 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of dense_latency_0_0_0_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv13_6D4 : STD_LOGIC_VECTOR (12 downto 0) := "0011011010100";
    constant ap_const_lv13_1C60 : STD_LOGIC_VECTOR (12 downto 0) := "1110001100000";
    constant ap_const_lv13_ADC : STD_LOGIC_VECTOR (12 downto 0) := "0101011011100";

    signal data_18_V_read_3_reg_851 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal data_6_V_read_5_reg_858 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_product_1_fu_252_ap_return : STD_LOGIC_VECTOR (13 downto 0);
    signal mult_56_V_reg_864 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_product_1_fu_332_ap_return : STD_LOGIC_VECTOR (13 downto 0);
    signal mult_136_V_reg_869 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_product_1_fu_356_ap_return : STD_LOGIC_VECTOR (13 downto 0);
    signal mult_168_V_reg_874 : STD_LOGIC_VECTOR (13 downto 0);
    signal acc_1_V_fu_503_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_1_V_reg_879 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp18_fu_533_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp18_reg_885 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp26_fu_551_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp26_reg_890 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp31_fu_557_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp31_reg_895 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp31_reg_895_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp37_fu_571_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp37_reg_900 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp39_fu_585_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp39_reg_905 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp40_fu_599_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp40_reg_910 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp42_fu_641_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp42_reg_915 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp47_fu_665_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp47_reg_920 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_1_fu_378_ap_return : STD_LOGIC_VECTOR (13 downto 0);
    signal mult_144_V_reg_926 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp33_fu_702_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp33_reg_931 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_3_V_fu_771_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_3_V_reg_936 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_5_V_fu_787_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_5_V_reg_941 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_1_fu_204_ap_return : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_product_1_fu_204_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_212_ap_return : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_product_1_fu_212_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_220_ap_return : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_product_1_fu_220_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_228_ap_return : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_product_1_fu_228_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_236_ap_return : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_product_1_fu_236_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_244_ap_return : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_product_1_fu_244_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_252_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_260_ap_return : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_product_1_fu_260_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_268_ap_return : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_product_1_fu_268_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_276_ap_return : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_product_1_fu_276_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_284_ap_return : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_product_1_fu_284_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_292_ap_return : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_product_1_fu_292_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_300_ap_return : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_product_1_fu_300_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_308_ap_return : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_product_1_fu_308_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_316_ap_return : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_product_1_fu_316_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_324_ap_return : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_product_1_fu_324_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_332_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_340_ap_return : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_product_1_fu_340_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_348_ap_return : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_product_1_fu_348_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_356_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_364_ap_return : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_product_1_fu_364_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_371_ap_return : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_product_1_fu_371_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_378_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_385_ap_return : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_product_1_fu_385_ap_ce : STD_LOGIC;
    signal grp_product_1_fu_392_ap_return : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_product_1_fu_392_ap_ce : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal mult_64_V_2_fu_399_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mult_72_V_2_fu_403_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mult_80_V_2_fu_407_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mult_88_V_2_fu_411_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mult_96_V_2_fu_415_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mult_104_V_2_fu_419_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mult_112_V_2_fu_423_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mult_120_V_2_fu_427_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mult_128_V_2_fu_431_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mult_136_V_2_fu_435_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mult_160_V_2_fu_443_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp5_trunc_ext_cast_fu_447_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp5_trunc1_ext_cast_fu_451_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp5_fu_455_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp4_trunc_ext_fu_465_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp5_cast_fu_461_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp7_trunc2_ext_cast_fu_479_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp7_trunc_ext_cast_fu_475_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp7_fu_483_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp6_trunc_ext_fu_493_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp7_cast_fu_489_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp4_fu_469_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp6_fu_497_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mult_112_V_2_fu_423_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mult_128_V_2_fu_431_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mult_120_V_2_fu_427_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp20_fu_509_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mult_96_V_2_fu_415_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mult_104_V_2_fu_419_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mult_88_V_2_fu_411_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp22_fu_521_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp19_fu_515_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp21_fu_527_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mult_80_V_2_fu_407_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mult_64_V_2_fu_399_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mult_136_V_2_fu_435_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mult_72_V_2_fu_403_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp27_fu_539_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp28_fu_545_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mult_160_V_2_fu_443_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mult_152_V_2_fu_439_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp37_trunc_ext_cast_fu_563_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp37_trunc3_ext_cas_fu_567_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp37_trunc3_ext_cas_fu_567_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp37_trunc_ext_cast_fu_563_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp39_trunc_ext_cast_fu_577_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp39_trunc4_ext_cas_fu_581_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp39_trunc4_ext_cas_fu_581_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp39_trunc_ext_cast_fu_577_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp40_trunc_ext_cast_fu_591_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp40_trunc5_ext_cas_fu_595_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp40_trunc5_ext_cas_fu_595_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp40_trunc_ext_cast_fu_591_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp43_trunc_ext_cast_fu_605_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp43_trunc6_ext_cas_fu_609_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp43_trunc6_ext_cas_fu_609_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp43_trunc_ext_cast_fu_605_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp43_fu_613_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp44_trunc_ext_cast_fu_623_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp44_trunc7_ext_cas_fu_627_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp44_trunc7_ext_cas_fu_627_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp44_trunc_ext_cast_fu_623_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp44_fu_631_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp43_cast_fu_619_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp44_cast_fu_637_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp48_trunc_ext_cast_fu_647_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp48_trunc9_ext_cas_fu_651_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp48_trunc9_ext_cas_fu_651_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp48_trunc_ext_cast_fu_647_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp48_fu_655_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp48_cast_fu_661_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp25_trunc_ext_fu_677_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mult_56_V_2_fu_671_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp25_fu_681_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp24_fu_687_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp23_fu_692_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mult_168_V_2_fu_674_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_1_V_2_fu_697_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp36_trunc_ext_fu_708_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp36_fu_712_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp37_cast_fu_717_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp39_cast_fu_726_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp40_cast_fu_729_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp35_fu_720_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp38_fu_732_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp46_trunc8_ext_cas_fu_747_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp46_trunc_ext_cast_fu_744_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp46_fu_751_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp46_cast_fu_757_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp45_fu_761_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp34_fu_738_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp41_fu_766_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp49_trunc_ext_fu_777_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp49_fu_781_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp32_trunc_ext_fu_792_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp32_fu_795_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_1_V_3_fu_800_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_ce_reg : STD_LOGIC;
    signal data_0_V_read_int_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal data_1_V_read_int_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal data_2_V_read_int_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal data_3_V_read_int_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal data_4_V_read_int_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal data_5_V_read_int_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal data_6_V_read_int_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal data_7_V_read_int_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal data_8_V_read_int_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal data_9_V_read_int_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal data_10_V_read_int_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal data_11_V_read_int_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal data_12_V_read_int_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal data_13_V_read_int_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal data_14_V_read_int_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal data_15_V_read_int_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal data_16_V_read_int_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal data_17_V_read_int_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal data_18_V_read_int_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal data_19_V_read_int_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal data_20_V_read_int_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal data_21_V_read_int_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_return_0_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_return_1_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_return_2_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_return_3_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_return_4_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_return_5_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_return_6_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_return_7_int_reg : STD_LOGIC_VECTOR (15 downto 0);

    component product_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        a_V : IN STD_LOGIC_VECTOR (14 downto 0);
        w_V : IN STD_LOGIC_VECTOR (12 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;



begin
    grp_product_1_fu_204 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => data_0_V_read_int_reg,
        w_V => ap_const_lv13_0,
        ap_return => grp_product_1_fu_204_ap_return,
        ap_ce => grp_product_1_fu_204_ap_ce);

    grp_product_1_fu_212 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => data_1_V_read_int_reg,
        w_V => ap_const_lv13_0,
        ap_return => grp_product_1_fu_212_ap_return,
        ap_ce => grp_product_1_fu_212_ap_ce);

    grp_product_1_fu_220 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => data_2_V_read_int_reg,
        w_V => ap_const_lv13_0,
        ap_return => grp_product_1_fu_220_ap_return,
        ap_ce => grp_product_1_fu_220_ap_ce);

    grp_product_1_fu_228 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => data_3_V_read_int_reg,
        w_V => ap_const_lv13_0,
        ap_return => grp_product_1_fu_228_ap_return,
        ap_ce => grp_product_1_fu_228_ap_ce);

    grp_product_1_fu_236 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => data_4_V_read_int_reg,
        w_V => ap_const_lv13_0,
        ap_return => grp_product_1_fu_236_ap_return,
        ap_ce => grp_product_1_fu_236_ap_ce);

    grp_product_1_fu_244 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => data_5_V_read_int_reg,
        w_V => ap_const_lv13_0,
        ap_return => grp_product_1_fu_244_ap_return,
        ap_ce => grp_product_1_fu_244_ap_ce);

    grp_product_1_fu_252 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => data_7_V_read_int_reg,
        w_V => ap_const_lv13_0,
        ap_return => grp_product_1_fu_252_ap_return,
        ap_ce => grp_product_1_fu_252_ap_ce);

    grp_product_1_fu_260 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => data_8_V_read_int_reg,
        w_V => ap_const_lv13_0,
        ap_return => grp_product_1_fu_260_ap_return,
        ap_ce => grp_product_1_fu_260_ap_ce);

    grp_product_1_fu_268 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => data_9_V_read_int_reg,
        w_V => ap_const_lv13_0,
        ap_return => grp_product_1_fu_268_ap_return,
        ap_ce => grp_product_1_fu_268_ap_ce);

    grp_product_1_fu_276 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => data_10_V_read_int_reg,
        w_V => ap_const_lv13_0,
        ap_return => grp_product_1_fu_276_ap_return,
        ap_ce => grp_product_1_fu_276_ap_ce);

    grp_product_1_fu_284 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => data_11_V_read_int_reg,
        w_V => ap_const_lv13_0,
        ap_return => grp_product_1_fu_284_ap_return,
        ap_ce => grp_product_1_fu_284_ap_ce);

    grp_product_1_fu_292 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => data_12_V_read_int_reg,
        w_V => ap_const_lv13_0,
        ap_return => grp_product_1_fu_292_ap_return,
        ap_ce => grp_product_1_fu_292_ap_ce);

    grp_product_1_fu_300 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => data_13_V_read_int_reg,
        w_V => ap_const_lv13_0,
        ap_return => grp_product_1_fu_300_ap_return,
        ap_ce => grp_product_1_fu_300_ap_ce);

    grp_product_1_fu_308 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => data_14_V_read_int_reg,
        w_V => ap_const_lv13_0,
        ap_return => grp_product_1_fu_308_ap_return,
        ap_ce => grp_product_1_fu_308_ap_ce);

    grp_product_1_fu_316 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => data_15_V_read_int_reg,
        w_V => ap_const_lv13_0,
        ap_return => grp_product_1_fu_316_ap_return,
        ap_ce => grp_product_1_fu_316_ap_ce);

    grp_product_1_fu_324 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => data_16_V_read_int_reg,
        w_V => ap_const_lv13_0,
        ap_return => grp_product_1_fu_324_ap_return,
        ap_ce => grp_product_1_fu_324_ap_ce);

    grp_product_1_fu_332 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => data_17_V_read_int_reg,
        w_V => ap_const_lv13_0,
        ap_return => grp_product_1_fu_332_ap_return,
        ap_ce => grp_product_1_fu_332_ap_ce);

    grp_product_1_fu_340 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => data_19_V_read_int_reg,
        w_V => ap_const_lv13_0,
        ap_return => grp_product_1_fu_340_ap_return,
        ap_ce => grp_product_1_fu_340_ap_ce);

    grp_product_1_fu_348 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => data_20_V_read_int_reg,
        w_V => ap_const_lv13_0,
        ap_return => grp_product_1_fu_348_ap_return,
        ap_ce => grp_product_1_fu_348_ap_ce);

    grp_product_1_fu_356 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => data_21_V_read_int_reg,
        w_V => ap_const_lv13_0,
        ap_return => grp_product_1_fu_356_ap_return,
        ap_ce => grp_product_1_fu_356_ap_ce);

    grp_product_1_fu_364 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => data_6_V_read_5_reg_858,
        w_V => ap_const_lv13_0,
        ap_return => grp_product_1_fu_364_ap_return,
        ap_ce => grp_product_1_fu_364_ap_ce);

    grp_product_1_fu_371 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => data_6_V_read_5_reg_858,
        w_V => ap_const_lv13_6D4,
        ap_return => grp_product_1_fu_371_ap_return,
        ap_ce => grp_product_1_fu_371_ap_ce);

    grp_product_1_fu_378 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => data_18_V_read_3_reg_851,
        w_V => ap_const_lv13_0,
        ap_return => grp_product_1_fu_378_ap_return,
        ap_ce => grp_product_1_fu_378_ap_ce);

    grp_product_1_fu_385 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => data_18_V_read_3_reg_851,
        w_V => ap_const_lv13_1C60,
        ap_return => grp_product_1_fu_385_ap_return,
        ap_ce => grp_product_1_fu_385_ap_ce);

    grp_product_1_fu_392 : component product_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => data_18_V_read_3_reg_851,
        w_V => ap_const_lv13_ADC,
        ap_return => grp_product_1_fu_392_ap_return,
        ap_ce => grp_product_1_fu_392_ap_ce);





    ap_ce_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ce_reg <= ap_ce;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                acc_1_V_reg_879 <= acc_1_V_fu_503_p2;
                acc_3_V_reg_936 <= acc_3_V_fu_771_p2;
                acc_5_V_reg_941 <= acc_5_V_fu_787_p2;
                data_18_V_read_3_reg_851 <= data_18_V_read_int_reg;
                data_6_V_read_5_reg_858 <= data_6_V_read_int_reg;
                mult_136_V_reg_869 <= grp_product_1_fu_332_ap_return;
                mult_144_V_reg_926 <= grp_product_1_fu_378_ap_return;
                mult_168_V_reg_874 <= grp_product_1_fu_356_ap_return;
                mult_56_V_reg_864 <= grp_product_1_fu_252_ap_return;
                tmp18_reg_885 <= tmp18_fu_533_p2;
                tmp26_reg_890 <= tmp26_fu_551_p2;
                tmp31_reg_895 <= tmp31_fu_557_p2;
                tmp31_reg_895_pp0_iter2_reg <= tmp31_reg_895;
                tmp33_reg_931 <= tmp33_fu_702_p2;
                tmp37_reg_900 <= tmp37_fu_571_p2;
                tmp39_reg_905 <= tmp39_fu_585_p2;
                tmp40_reg_910 <= tmp40_fu_599_p2;
                tmp42_reg_915 <= tmp42_fu_641_p2;
                tmp47_reg_920 <= tmp47_fu_665_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce_reg)) then
                ap_return_0_int_reg <= acc_1_V_3_fu_800_p2;
                ap_return_1_int_reg <= acc_1_V_3_fu_800_p2;
                ap_return_2_int_reg <= acc_1_V_3_fu_800_p2;
                ap_return_3_int_reg <= acc_3_V_reg_936;
                ap_return_4_int_reg <= acc_1_V_3_fu_800_p2;
                ap_return_5_int_reg <= acc_5_V_reg_941;
                ap_return_6_int_reg <= acc_1_V_3_fu_800_p2;
                ap_return_7_int_reg <= acc_1_V_3_fu_800_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                data_0_V_read_int_reg <= data_0_V_read;
                data_10_V_read_int_reg <= data_10_V_read;
                data_11_V_read_int_reg <= data_11_V_read;
                data_12_V_read_int_reg <= data_12_V_read;
                data_13_V_read_int_reg <= data_13_V_read;
                data_14_V_read_int_reg <= data_14_V_read;
                data_15_V_read_int_reg <= data_15_V_read;
                data_16_V_read_int_reg <= data_16_V_read;
                data_17_V_read_int_reg <= data_17_V_read;
                data_18_V_read_int_reg <= data_18_V_read;
                data_19_V_read_int_reg <= data_19_V_read;
                data_1_V_read_int_reg <= data_1_V_read;
                data_20_V_read_int_reg <= data_20_V_read;
                data_21_V_read_int_reg <= data_21_V_read;
                data_2_V_read_int_reg <= data_2_V_read;
                data_3_V_read_int_reg <= data_3_V_read;
                data_4_V_read_int_reg <= data_4_V_read;
                data_5_V_read_int_reg <= data_5_V_read;
                data_6_V_read_int_reg <= data_6_V_read;
                data_7_V_read_int_reg <= data_7_V_read;
                data_8_V_read_int_reg <= data_8_V_read;
                data_9_V_read_int_reg <= data_9_V_read;
            end if;
        end if;
    end process;
    acc_1_V_2_fu_697_p2 <= std_logic_vector(unsigned(tmp18_reg_885) + unsigned(tmp23_fu_692_p2));
    acc_1_V_3_fu_800_p2 <= std_logic_vector(unsigned(tmp31_reg_895_pp0_iter2_reg) + unsigned(tmp32_fu_795_p2));
    acc_1_V_fu_503_p2 <= std_logic_vector(unsigned(tmp4_fu_469_p2) + unsigned(tmp6_fu_497_p2));
    acc_3_V_fu_771_p2 <= std_logic_vector(unsigned(tmp34_fu_738_p2) + unsigned(tmp41_fu_766_p2));
    acc_5_V_fu_787_p2 <= std_logic_vector(unsigned(tmp49_fu_781_p2) + unsigned(tmp47_reg_920));
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_return_0_assign_proc : process(acc_1_V_3_fu_800_p2, ap_ce_reg, ap_return_0_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_0 <= ap_return_0_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_0 <= acc_1_V_3_fu_800_p2;
        end if; 
    end process;


    ap_return_1_assign_proc : process(acc_1_V_3_fu_800_p2, ap_ce_reg, ap_return_1_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_1 <= ap_return_1_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_1 <= acc_1_V_3_fu_800_p2;
        end if; 
    end process;


    ap_return_2_assign_proc : process(acc_1_V_3_fu_800_p2, ap_ce_reg, ap_return_2_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_2 <= ap_return_2_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_2 <= acc_1_V_3_fu_800_p2;
        end if; 
    end process;


    ap_return_3_assign_proc : process(acc_3_V_reg_936, ap_ce_reg, ap_return_3_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_3 <= ap_return_3_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_3 <= acc_3_V_reg_936;
        end if; 
    end process;


    ap_return_4_assign_proc : process(acc_1_V_3_fu_800_p2, ap_ce_reg, ap_return_4_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_4 <= ap_return_4_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_4 <= acc_1_V_3_fu_800_p2;
        end if; 
    end process;


    ap_return_5_assign_proc : process(acc_5_V_reg_941, ap_ce_reg, ap_return_5_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_5 <= ap_return_5_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_5 <= acc_5_V_reg_941;
        end if; 
    end process;


    ap_return_6_assign_proc : process(acc_1_V_3_fu_800_p2, ap_ce_reg, ap_return_6_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_6 <= ap_return_6_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_6 <= acc_1_V_3_fu_800_p2;
        end if; 
    end process;


    ap_return_7_assign_proc : process(acc_1_V_3_fu_800_p2, ap_ce_reg, ap_return_7_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_7 <= ap_return_7_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_7 <= acc_1_V_3_fu_800_p2;
        end if; 
    end process;


    grp_product_1_fu_204_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_product_1_fu_204_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_204_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_212_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_product_1_fu_212_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_212_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_220_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_product_1_fu_220_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_220_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_228_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_product_1_fu_228_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_228_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_236_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_product_1_fu_236_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_236_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_244_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_product_1_fu_244_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_244_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_252_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_product_1_fu_252_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_252_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_260_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_product_1_fu_260_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_260_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_268_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_product_1_fu_268_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_268_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_276_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_product_1_fu_276_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_276_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_284_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_product_1_fu_284_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_284_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_292_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_product_1_fu_292_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_292_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_300_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_product_1_fu_300_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_300_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_308_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_product_1_fu_308_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_308_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_316_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_product_1_fu_316_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_316_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_324_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_product_1_fu_324_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_324_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_332_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_product_1_fu_332_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_332_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_340_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_product_1_fu_340_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_340_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_348_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_product_1_fu_348_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_348_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_356_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_product_1_fu_356_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_356_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_364_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_product_1_fu_364_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_364_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_371_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_product_1_fu_371_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_371_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_378_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_product_1_fu_378_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_378_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_385_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_product_1_fu_385_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_385_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_1_fu_392_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_product_1_fu_392_ap_ce <= ap_const_logic_1;
        else 
            grp_product_1_fu_392_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    mult_104_V_2_fu_419_p0 <= grp_product_1_fu_300_ap_return;
        mult_104_V_2_fu_419_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mult_104_V_2_fu_419_p0),16));

    mult_112_V_2_fu_423_p0 <= grp_product_1_fu_308_ap_return;
        mult_112_V_2_fu_423_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mult_112_V_2_fu_423_p0),16));

    mult_120_V_2_fu_427_p0 <= grp_product_1_fu_316_ap_return;
        mult_120_V_2_fu_427_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mult_120_V_2_fu_427_p0),16));

    mult_128_V_2_fu_431_p0 <= grp_product_1_fu_324_ap_return;
        mult_128_V_2_fu_431_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mult_128_V_2_fu_431_p0),16));

    mult_136_V_2_fu_435_p0 <= grp_product_1_fu_332_ap_return;
        mult_136_V_2_fu_435_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mult_136_V_2_fu_435_p0),16));

        mult_152_V_2_fu_439_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_product_1_fu_340_ap_return),16));

    mult_160_V_2_fu_443_p0 <= grp_product_1_fu_348_ap_return;
        mult_160_V_2_fu_443_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mult_160_V_2_fu_443_p0),16));

        mult_168_V_2_fu_674_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mult_168_V_reg_874),16));

        mult_56_V_2_fu_671_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mult_56_V_reg_864),16));

    mult_64_V_2_fu_399_p0 <= grp_product_1_fu_260_ap_return;
        mult_64_V_2_fu_399_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mult_64_V_2_fu_399_p0),16));

    mult_72_V_2_fu_403_p0 <= grp_product_1_fu_268_ap_return;
        mult_72_V_2_fu_403_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mult_72_V_2_fu_403_p0),16));

    mult_80_V_2_fu_407_p0 <= grp_product_1_fu_276_ap_return;
        mult_80_V_2_fu_407_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mult_80_V_2_fu_407_p0),16));

    mult_88_V_2_fu_411_p0 <= grp_product_1_fu_284_ap_return;
        mult_88_V_2_fu_411_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mult_88_V_2_fu_411_p0),16));

    mult_96_V_2_fu_415_p0 <= grp_product_1_fu_292_ap_return;
        mult_96_V_2_fu_415_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mult_96_V_2_fu_415_p0),16));

    tmp18_fu_533_p2 <= std_logic_vector(unsigned(tmp19_fu_515_p2) + unsigned(tmp21_fu_527_p2));
    tmp19_fu_515_p2 <= std_logic_vector(signed(mult_120_V_2_fu_427_p1) + signed(tmp20_fu_509_p2));
    tmp20_fu_509_p2 <= std_logic_vector(signed(mult_112_V_2_fu_423_p1) + signed(mult_128_V_2_fu_431_p1));
    tmp21_fu_527_p2 <= std_logic_vector(signed(mult_88_V_2_fu_411_p1) + signed(tmp22_fu_521_p2));
    tmp22_fu_521_p2 <= std_logic_vector(signed(mult_96_V_2_fu_415_p1) + signed(mult_104_V_2_fu_419_p1));
    tmp23_fu_692_p2 <= std_logic_vector(unsigned(tmp24_fu_687_p2) + unsigned(tmp26_reg_890));
    tmp24_fu_687_p2 <= std_logic_vector(unsigned(acc_1_V_reg_879) + unsigned(tmp25_fu_681_p2));
    tmp25_fu_681_p2 <= std_logic_vector(signed(tmp25_trunc_ext_fu_677_p1) + signed(mult_56_V_2_fu_671_p1));
        tmp25_trunc_ext_fu_677_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_product_1_fu_364_ap_return),16));

    tmp26_fu_551_p2 <= std_logic_vector(unsigned(tmp27_fu_539_p2) + unsigned(tmp28_fu_545_p2));
    tmp27_fu_539_p2 <= std_logic_vector(signed(mult_80_V_2_fu_407_p1) + signed(mult_64_V_2_fu_399_p1));
    tmp28_fu_545_p2 <= std_logic_vector(signed(mult_136_V_2_fu_435_p1) + signed(mult_72_V_2_fu_403_p1));
    tmp31_fu_557_p2 <= std_logic_vector(signed(mult_160_V_2_fu_443_p1) + signed(mult_152_V_2_fu_439_p1));
    tmp32_fu_795_p2 <= std_logic_vector(signed(tmp32_trunc_ext_fu_792_p1) + signed(tmp33_reg_931));
        tmp32_trunc_ext_fu_792_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mult_144_V_reg_926),16));

    tmp33_fu_702_p2 <= std_logic_vector(signed(mult_168_V_2_fu_674_p1) + signed(acc_1_V_2_fu_697_p2));
    tmp34_fu_738_p2 <= std_logic_vector(unsigned(tmp35_fu_720_p2) + unsigned(tmp38_fu_732_p2));
    tmp35_fu_720_p2 <= std_logic_vector(unsigned(tmp36_fu_712_p2) + unsigned(tmp37_cast_fu_717_p1));
    tmp36_fu_712_p2 <= std_logic_vector(signed(tmp36_trunc_ext_fu_708_p1) + signed(acc_1_V_reg_879));
        tmp36_trunc_ext_fu_708_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_product_1_fu_371_ap_return),16));

        tmp37_cast_fu_717_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp37_reg_900),16));

    tmp37_fu_571_p2 <= std_logic_vector(signed(tmp37_trunc3_ext_cas_fu_567_p1) + signed(tmp37_trunc_ext_cast_fu_563_p1));
    tmp37_trunc3_ext_cas_fu_567_p0 <= grp_product_1_fu_260_ap_return;
        tmp37_trunc3_ext_cas_fu_567_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp37_trunc3_ext_cas_fu_567_p0),15));

    tmp37_trunc_ext_cast_fu_563_p0 <= grp_product_1_fu_252_ap_return;
        tmp37_trunc_ext_cast_fu_563_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp37_trunc_ext_cast_fu_563_p0),15));

    tmp38_fu_732_p2 <= std_logic_vector(signed(tmp39_cast_fu_726_p1) + signed(tmp40_cast_fu_729_p1));
        tmp39_cast_fu_726_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp39_reg_905),16));

    tmp39_fu_585_p2 <= std_logic_vector(signed(tmp39_trunc4_ext_cas_fu_581_p1) + signed(tmp39_trunc_ext_cast_fu_577_p1));
    tmp39_trunc4_ext_cas_fu_581_p0 <= grp_product_1_fu_276_ap_return;
        tmp39_trunc4_ext_cas_fu_581_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp39_trunc4_ext_cas_fu_581_p0),15));

    tmp39_trunc_ext_cast_fu_577_p0 <= grp_product_1_fu_268_ap_return;
        tmp39_trunc_ext_cast_fu_577_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp39_trunc_ext_cast_fu_577_p0),15));

        tmp40_cast_fu_729_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp40_reg_910),16));

    tmp40_fu_599_p2 <= std_logic_vector(signed(tmp40_trunc5_ext_cas_fu_595_p1) + signed(tmp40_trunc_ext_cast_fu_591_p1));
    tmp40_trunc5_ext_cas_fu_595_p0 <= grp_product_1_fu_292_ap_return;
        tmp40_trunc5_ext_cas_fu_595_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp40_trunc5_ext_cas_fu_595_p0),15));

    tmp40_trunc_ext_cast_fu_591_p0 <= grp_product_1_fu_284_ap_return;
        tmp40_trunc_ext_cast_fu_591_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp40_trunc_ext_cast_fu_591_p0),15));

    tmp41_fu_766_p2 <= std_logic_vector(unsigned(tmp42_reg_915) + unsigned(tmp45_fu_761_p2));
    tmp42_fu_641_p2 <= std_logic_vector(signed(tmp43_cast_fu_619_p1) + signed(tmp44_cast_fu_637_p1));
        tmp43_cast_fu_619_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp43_fu_613_p2),16));

    tmp43_fu_613_p2 <= std_logic_vector(signed(tmp43_trunc6_ext_cas_fu_609_p1) + signed(tmp43_trunc_ext_cast_fu_605_p1));
    tmp43_trunc6_ext_cas_fu_609_p0 <= grp_product_1_fu_308_ap_return;
        tmp43_trunc6_ext_cas_fu_609_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp43_trunc6_ext_cas_fu_609_p0),15));

    tmp43_trunc_ext_cast_fu_605_p0 <= grp_product_1_fu_300_ap_return;
        tmp43_trunc_ext_cast_fu_605_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp43_trunc_ext_cast_fu_605_p0),15));

        tmp44_cast_fu_637_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp44_fu_631_p2),16));

    tmp44_fu_631_p2 <= std_logic_vector(signed(tmp44_trunc7_ext_cas_fu_627_p1) + signed(tmp44_trunc_ext_cast_fu_623_p1));
    tmp44_trunc7_ext_cas_fu_627_p0 <= grp_product_1_fu_324_ap_return;
        tmp44_trunc7_ext_cas_fu_627_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp44_trunc7_ext_cas_fu_627_p0),15));

    tmp44_trunc_ext_cast_fu_623_p0 <= grp_product_1_fu_316_ap_return;
        tmp44_trunc_ext_cast_fu_623_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp44_trunc_ext_cast_fu_623_p0),15));

    tmp45_fu_761_p2 <= std_logic_vector(signed(tmp46_cast_fu_757_p1) + signed(tmp47_reg_920));
        tmp46_cast_fu_757_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp46_fu_751_p2),16));

    tmp46_fu_751_p2 <= std_logic_vector(signed(tmp46_trunc8_ext_cas_fu_747_p1) + signed(tmp46_trunc_ext_cast_fu_744_p1));
        tmp46_trunc8_ext_cas_fu_747_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_product_1_fu_385_ap_return),15));

        tmp46_trunc_ext_cast_fu_744_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mult_136_V_reg_869),15));

    tmp47_fu_665_p2 <= std_logic_vector(signed(mult_152_V_2_fu_439_p1) + signed(tmp48_cast_fu_661_p1));
        tmp48_cast_fu_661_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp48_fu_655_p2),16));

    tmp48_fu_655_p2 <= std_logic_vector(signed(tmp48_trunc9_ext_cas_fu_651_p1) + signed(tmp48_trunc_ext_cast_fu_647_p1));
    tmp48_trunc9_ext_cas_fu_651_p0 <= grp_product_1_fu_356_ap_return;
        tmp48_trunc9_ext_cas_fu_651_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp48_trunc9_ext_cas_fu_651_p0),15));

    tmp48_trunc_ext_cast_fu_647_p0 <= grp_product_1_fu_348_ap_return;
        tmp48_trunc_ext_cast_fu_647_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp48_trunc_ext_cast_fu_647_p0),15));

    tmp49_fu_781_p2 <= std_logic_vector(signed(tmp49_trunc_ext_fu_777_p1) + signed(acc_1_V_2_fu_697_p2));
        tmp49_trunc_ext_fu_777_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_product_1_fu_392_ap_return),16));

    tmp4_fu_469_p2 <= std_logic_vector(signed(tmp4_trunc_ext_fu_465_p1) + signed(tmp5_cast_fu_461_p1));
        tmp4_trunc_ext_fu_465_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_product_1_fu_228_ap_return),16));

        tmp5_cast_fu_461_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp5_fu_455_p2),16));

    tmp5_fu_455_p2 <= std_logic_vector(signed(tmp5_trunc_ext_cast_fu_447_p1) + signed(tmp5_trunc1_ext_cast_fu_451_p1));
        tmp5_trunc1_ext_cast_fu_451_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_product_1_fu_236_ap_return),15));

        tmp5_trunc_ext_cast_fu_447_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_product_1_fu_220_ap_return),15));

    tmp6_fu_497_p2 <= std_logic_vector(signed(tmp6_trunc_ext_fu_493_p1) + signed(tmp7_cast_fu_489_p1));
        tmp6_trunc_ext_fu_493_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_product_1_fu_212_ap_return),16));

        tmp7_cast_fu_489_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp7_fu_483_p2),16));

    tmp7_fu_483_p2 <= std_logic_vector(signed(tmp7_trunc2_ext_cast_fu_479_p1) + signed(tmp7_trunc_ext_cast_fu_475_p1));
        tmp7_trunc2_ext_cast_fu_479_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_product_1_fu_244_ap_return),15));

        tmp7_trunc_ext_cast_fu_475_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_product_1_fu_204_ap_return),15));

end behav;
